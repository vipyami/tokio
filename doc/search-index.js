var searchIndex={};
searchIndex["test_cat"] = {"doc":"A cat-like utility that can be used as a subprocess to…","i":[[5,"main","test_cat","",null,[[]]]],"p":[]};
searchIndex["tests_build"] = {"doc":"","i":[],"p":[]};
searchIndex["tests_integration"] = {"doc":"","i":[],"p":[]};
searchIndex["tokio"] = {"doc":"A runtime for writing reliable, asynchronous, and slim…","i":[[23,"main","tokio","Marks async function to be executed by selected runtime.",null,null],[23,"test","","Marks async function to be executed by runtime, suitable…",null,null],[5,"spawn","","Spawns a new asynchronous task, returning a `JoinHandle`…",null,[[["t"]],["joinhandle"]]],[0,"fs","","Asynchronous file and standard stream adaptation.",null,null],[3,"DirBuilder","tokio::fs","A builder for creating directories in various manners.",null,null],[3,"File","","A reference to an open file on the filesystem.",null,null],[3,"OpenOptions","","Options and flags which can be used to configure how a…",null,null],[3,"DirEntry","","Entries returned by the [`ReadDir`] stream.",null,null],[3,"ReadDir","","Stream of the entries in a directory.",null,null],[5,"canonicalize","","Returns the canonical, absolute form of a path with all…",null,[[]]],[5,"create_dir","","Creates a new, empty directory at the provided path",null,[[]]],[5,"create_dir_all","","Recursively creates a directory and all of its parent…",null,[[]]],[5,"hard_link","","Creates a new hard link on the filesystem.",null,[[]]],[5,"metadata","","Given a path, queries the file system to get information…",null,[[]]],[5,"read","","Reads the entire contents of a file into a bytes vector.",null,[[]]],[5,"read_dir","","Returns a stream over the entries within a directory.",null,[[]]],[5,"read_link","","Reads a symbolic link, returning the file that the link…",null,[[]]],[5,"read_to_string","","Creates a future which will open a file for reading and…",null,[[]]],[5,"remove_dir","","Removes an existing, empty directory.",null,[[]]],[5,"remove_dir_all","","Removes a directory at this path, after removing all its…",null,[[]]],[5,"remove_file","","Removes a file from the filesystem.",null,[[]]],[5,"rename","","Renames a file or directory to a new name, replacing the…",null,[[]]],[5,"set_permissions","","Changes the permissions found on a file or a directory.",null,[[["permissions"]]]],[5,"symlink_metadata","","Queries the file system metadata for a path.",null,[[]]],[5,"write","","Creates a future that will open a file for writing and…",null,[[["asref"],["unpin"]]]],[5,"copy","","Copies the contents of one file to another. This function…",null,[[["path"],["asref",["path"]]]]],[11,"new","","Creates a new set of options with default mode/security…",0,[[],["self"]]],[11,"recursive","","Indicates whether to create directories recursively…",0,[[["self"],["bool"]],["self"]]],[11,"create","","Creates the specified directory with the configured options.",0,[[["path"],["self"],["asref",["path"]]]]],[11,"open","","Attempts to open a file in read-only mode.",1,[[]]],[11,"create","","Opens a file in write-only mode.",1,[[]]],[11,"from_std","","Converts a [`std::fs::File`][std] to a…",1,[[["file"]],["file"]]],[11,"seek","","Seeks to an offset, in bytes, in a stream.",1,[[["seekfrom"],["self"]]]],[11,"sync_all","","Attempts to sync all OS-internal metadata to disk.",1,[[["self"]]]],[11,"sync_data","","This function is similar to `sync_all`, except that it may…",1,[[["self"]]]],[11,"set_len","","Truncates or extends the underlying file, updating the…",1,[[["u64"],["self"]]]],[11,"metadata","","Queries metadata about the underlying file.",1,[[["self"]]]],[11,"try_clone","","Create a new `File` instance that shares the same…",1,[[["self"]]]],[11,"into_std","","Destructures `File` into a [`std::fs::File`][std]. This…",1,[[]]],[11,"try_into_std","","Tries to immediately destructure `File` into a…",1,[[],[["result",["file"]],["file"]]]],[11,"set_permissions","","Changes the permissions on the underlying file.",1,[[["self"],["permissions"]]]],[11,"new","","Creates a blank new set of options ready for configuration.",2,[[],["openoptions"]]],[11,"read","","Sets the option for read access.",2,[[["self"],["bool"]],["openoptions"]]],[11,"write","","Sets the option for write access.",2,[[["self"],["bool"]],["openoptions"]]],[11,"append","","Sets the option for the append mode.",2,[[["self"],["bool"]],["openoptions"]]],[11,"truncate","","Sets the option for truncating a previous file.",2,[[["self"],["bool"]],["openoptions"]]],[11,"create","","Sets the option for creating a new file.",2,[[["self"],["bool"]],["openoptions"]]],[11,"create_new","","Sets the option to always create a new file.",2,[[["self"],["bool"]],["openoptions"]]],[11,"open","","Opens a file at `path` with the options specified by `self`.",2,[[["self"]]]],[0,"os","","OS-specific functionality.",null,null],[0,"unix","tokio::fs::os","Unix-specific extensions to primitives in the `tokio_fs`…",null,null],[5,"symlink","tokio::fs::os::unix","Creates a new symbolic link on the filesystem.",null,[[]]],[8,"OpenOptionsExt","","Unix-specific extensions to [`fs::OpenOptions`].",null,null],[10,"mode","","Sets the mode bits that a new file will be created with.",3,[[["self"],["u32"]],["self"]]],[10,"custom_flags","","Pass custom flags to the `flags` argument of `open`.",3,[[["self"],["i32"]],["self"]]],[8,"DirBuilderExt","","Unix-specific extensions to [`DirBuilder`].",null,null],[10,"mode","","Sets the mode to create new directories with.",4,[[["self"],["u32"]],["self"]]],[11,"next_entry","tokio::fs","Returns the next entry in the directory stream.",5,[[["self"]]]],[11,"path","","Returns the full path to the file that this entry…",6,[[["self"]],["pathbuf"]]],[11,"file_name","","Returns the bare file name of this directory entry without…",6,[[["self"]],["osstring"]]],[11,"metadata","","Returns the metadata for the file that this entry points at.",6,[[["self"]]]],[11,"file_type","","Returns the file type for the file that this entry points…",6,[[["self"]]]],[0,"io","tokio","Traits, helpers, and type definitions for asynchronous I/O…",null,null],[3,"Error","tokio::io","The error type for I/O operations of the [`Read`],…",null,null],[4,"ErrorKind","","A list specifying general categories of I/O error.",null,null],[13,"NotFound","","An entity was not found, often a file.",7,null],[13,"PermissionDenied","","The operation lacked the necessary privileges to complete.",7,null],[13,"ConnectionRefused","","The connection was refused by the remote server.",7,null],[13,"ConnectionReset","","The connection was reset by the remote server.",7,null],[13,"ConnectionAborted","","The connection was aborted (terminated) by the remote…",7,null],[13,"NotConnected","","The network operation failed because it was not connected…",7,null],[13,"AddrInUse","","A socket address could not be bound because the address is…",7,null],[13,"AddrNotAvailable","","A nonexistent interface was requested or the requested…",7,null],[13,"BrokenPipe","","The operation failed because a pipe was closed.",7,null],[13,"AlreadyExists","","An entity already exists, often a file.",7,null],[13,"WouldBlock","","The operation needs to block to complete, but the blocking…",7,null],[13,"InvalidInput","","A parameter was incorrect.",7,null],[13,"InvalidData","","Data not valid for the operation were encountered.",7,null],[13,"TimedOut","","The I/O operation's timeout expired, causing it to be…",7,null],[13,"WriteZero","","An error returned when an operation could not be completed…",7,null],[13,"Interrupted","","This operation was interrupted.",7,null],[13,"Other","","Any I/O error not part of this list.",7,null],[13,"UnexpectedEof","","An error returned when an operation could not be completed…",7,null],[6,"Result","","A specialized `Result` type for I/O operations.",null,null],[3,"PollEvented","","Associates an I/O resource that implements the…",null,null],[3,"Registration","","Associates an I/O resource with the reactor instance that…",null,null],[3,"Stderr","","A handle to the standard error stream of a process.",null,null],[3,"Stdin","","A handle to the standard input stream of a process.",null,null],[3,"Stdout","","A handle to the standard output stream of a process.",null,null],[3,"ReadHalf","","The readable half of a value returned from `split`.",null,null],[3,"WriteHalf","","The writable half of a value returned from `split`.",null,null],[3,"Seek","","Future for the `seek` method.",null,null],[3,"BufReader","","The `BufReader` struct adds buffering to any reader.",null,null],[3,"BufStream","","Wraps a type that is [`AsyncWrite`] and [`AsyncRead`], and…",null,null],[3,"BufWriter","","Wraps a writer and buffers its output.",null,null],[3,"Copy","","A future that asynchronously copies the entire contents of…",null,null],[3,"Empty","","An async reader which is always at EOF.",null,null],[3,"Lines","","Stream for the `lines` method.",null,null],[3,"Repeat","","An async reader which yields one byte over and over and…",null,null],[3,"Sink","","An async writer which will move data into the void.",null,null],[3,"Split","","Stream for the `split` method.",null,null],[3,"Take","","Stream for the `take` method.",null,null],[3,"StreamReader","","Convert a stream of byte chunks into an [`AsyncRead`].",null,null],[5,"stderr","","Constructs a new handle to the standard error of the…",null,[[],["stderr"]]],[5,"stdin","","Constructs a new handle to the standard input of the…",null,[[],["stdin"]]],[5,"stdout","","Constructs a new handle to the standard output of the…",null,[[],["stdout"]]],[5,"split","","Splits a single value implementing `AsyncRead +…",null,[[["t"]]]],[5,"copy","","Asynchronously copies the entire contents of a reader into…",null,[[["w"],["r"]],[["sized"],["copy"]]]],[5,"empty","","Creates a new empty async reader.",null,[[],["empty"]]],[5,"repeat","","Creates an instance of an async reader that infinitely…",null,[[["u8"]],["repeat"]]],[5,"sink","","Creates an instance of an async writer which will…",null,[[],["sink"]]],[5,"stream_reader","","Convert a stream of byte chunks into an `AsyncRead`.",null,[[["s"]],["streamreader"]]],[11,"new","","Creates a new `PollEvented` associated with the default…",8,[[["e"]],["result"]]],[11,"new_with_ready","","Creates a new `PollEvented` associated with the default…",8,[[["ready"],["e"]],["result"]]],[11,"get_ref","","Returns a shared reference to the underlying I/O object…",8,[[["self"]],["e"]]],[11,"get_mut","","Returns a mutable reference to the underlying I/O object…",8,[[["self"]],["e"]]],[11,"into_inner","","Consumes self, returning the inner I/O object",8,[[],["result"]]],[11,"poll_read_ready","","Checks the I/O resource's read readiness state.",8,[[["ready"],["self"],["context"]],[["poll",["result"]],["result",["ready"]]]]],[11,"clear_read_ready","","Clears the I/O resource's read readiness state and…",8,[[["ready"],["self"],["context"]],["result"]]],[11,"poll_write_ready","","Checks the I/O resource's write readiness state.",8,[[["self"],["context"]],[["poll",["result"]],["result",["ready"]]]]],[11,"clear_write_ready","","Resets the I/O resource's write readiness state and…",8,[[["self"],["context"]],["result"]]],[11,"new","","Registers the I/O resource with the default reactor.",9,[[["t"]],[["result",["registration"]],["registration"]]]],[11,"new_with_ready","","Registers the I/O resource with the default reactor, for a…",9,[[["t"],["ready"]],[["result",["registration"]],["registration"]]]],[11,"deregister","","Deregisters the I/O resource from the reactor it is…",9,[[["self"],["t"]],["result"]]],[11,"poll_read_ready","","Polls for events on the I/O resource's read readiness…",9,[[["self"],["context"]],[["poll",["result"]],["result",["ready"]]]]],[11,"take_read_ready","","Consume any pending read readiness event.",9,[[["self"]],[["result",["option"]],["option",["ready"]]]]],[11,"poll_write_ready","","Polls for events on the I/O resource's write readiness…",9,[[["self"],["context"]],[["poll",["result"]],["result",["ready"]]]]],[11,"take_write_ready","","Consumes any pending write readiness event.",9,[[["self"]],[["result",["option"]],["option",["ready"]]]]],[11,"is_pair_of","","Checks if this `ReadHalf` and some `WriteHalf` were split…",10,[[["self"],["writehalf"]],["bool"]]],[11,"unsplit","","Reunites with a previously split `WriteHalf`.",10,[[["writehalf"]],["t"]]],[11,"is_pair_of","","Check if this `WriteHalf` and some `ReadHalf` were split…",11,[[["self"],["readhalf"]],["bool"]]],[11,"new","","Creates a new `BufReader` with a default buffer capacity.…",12,[[["r"]],["self"]]],[11,"with_capacity","","Creates a new `BufReader` with the specified buffer…",12,[[["usize"],["r"]],["self"]]],[11,"get_ref","","Gets a reference to the underlying reader.",12,[[["self"]],["r"]]],[11,"get_mut","","Gets a mutable reference to the underlying reader.",12,[[["self"]],["r"]]],[11,"get_pin_mut","","Gets a pinned mutable reference to the underlying reader.",12,[[["pin"],["self"]],[["pin"],["r"]]]],[11,"into_inner","","Consumes this `BufWriter`, returning the underlying reader.",12,[[],["r"]]],[11,"buffer","","Returns a reference to the internally buffered data.",12,[[["self"]]]],[11,"new","","Wraps a type in both [`BufWriter`] and [`BufReader`].",13,[[["rw"]],["bufstream"]]],[11,"with_capacity","","Creates a `BufStream` with the specified [`BufReader`]…",13,[[["rw"],["usize"]],["bufstream"]]],[11,"get_ref","","Gets a reference to the underlying I/O object.",13,[[["self"]],["rw"]]],[11,"get_mut","","Gets a mutable reference to the underlying I/O object.",13,[[["self"]],["rw"]]],[11,"get_pin_mut","","Gets a pinned mutable reference to the underlying I/O…",13,[[["pin"],["self"]],[["rw"],["pin"]]]],[11,"into_inner","","Consumes this `BufStream`, returning the underlying I/O…",13,[[],["rw"]]],[11,"new","","Creates a new `BufWriter` with a default buffer capacity.…",14,[[["w"]],["self"]]],[11,"with_capacity","","Creates a new `BufWriter` with the specified buffer…",14,[[["w"],["usize"]],["self"]]],[11,"get_ref","","Gets a reference to the underlying writer.",14,[[["self"]],["w"]]],[11,"get_mut","","Gets a mutable reference to the underlying writer.",14,[[["self"]],["w"]]],[11,"get_pin_mut","","Gets a pinned mutable reference to the underlying writer.",14,[[["pin"],["self"]],[["w"],["pin"]]]],[11,"into_inner","","Consumes this `BufWriter`, returning the underlying writer.",14,[[],["w"]]],[11,"buffer","","Returns a reference to the internally buffered data.",14,[[["self"]]]],[11,"next_line","","Returns the next line in the stream.",15,[[["self"]]]],[11,"get_mut","","Obtain a mutable reference to the underlying reader",15,[[["self"]],["r"]]],[11,"get_ref","","Obtain a reference to the underlying reader",15,[[["self"]],["r"]]],[11,"into_inner","","Unwraps this `Lines<R>`, returning the underlying reader.",15,[[],["r"]]],[11,"next_segment","","Returns the next segment in the stream.",16,[[["self"]]]],[11,"limit","","Returns the remaining number of bytes that can be read…",17,[[["self"]],["u64"]]],[11,"set_limit","","Sets the number of bytes that can be read before this…",17,[[["self"],["u64"]]]],[11,"get_ref","","Gets a reference to the underlying reader.",17,[[["self"]],["r"]]],[11,"get_mut","","Gets a mutable reference to the underlying reader.",17,[[["self"]],["r"]]],[11,"get_pin_mut","","Gets a pinned mutable reference to the underlying reader.",17,[[["pin"],["self"]],[["pin"],["r"]]]],[11,"into_inner","","Consumes the `Take`, returning the wrapped reader.",17,[[],["r"]]],[8,"AsyncBufRead","","Reads bytes asynchronously.",null,null],[10,"poll_fill_buf","","Attempts to return the contents of the internal buffer,…",18,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[10,"consume","","Tells this buffer that `amt` bytes have been consumed from…",18,[[["pin"],["self"],["usize"]]]],[8,"AsyncRead","","Reads bytes from a source.",null,null],[11,"prepare_uninitialized_buffer","","Prepares an uninitialized buffer to be safe to pass to…",19,[[["self"]],["bool"]]],[10,"poll_read","","Attempts to read from the `AsyncRead` into `buf`.",19,[[["context"],["pin"],["self"]],[["result",["usize"]],["poll",["result"]]]]],[11,"poll_read_buf","","Pulls some bytes from this source into the specified…",19,[[["b"],["context"],["pin"],["self"]],[["result",["usize"]],["poll",["result"]]]]],[8,"AsyncSeek","","Seek bytes asynchronously.",null,null],[10,"start_seek","","Attempts to seek to an offset, in bytes, in a stream.",20,[[["seekfrom"],["context"],["pin"],["self"]],[["result"],["poll",["result"]]]]],[10,"poll_complete","","Waits for a seek operation to complete.",20,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["u64"]]]]],[8,"AsyncWrite","","Writes bytes asynchronously.",null,null],[10,"poll_write","","Attempt to write bytes from `buf` into the object.",21,[[["context"],["pin"],["self"]],[["poll",["result"]],["result",["usize","error"]]]]],[10,"poll_flush","","Attempts to flush the object, ensuring that any buffered…",21,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["error"]]]]],[10,"poll_shutdown","","Initiates or attempts to shut down this writer, returning…",21,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["error"]]]]],[11,"poll_write_buf","","Writes a `Buf` into this value, returning how many bytes…",21,[[["b"],["context"],["pin"],["self"]],[["poll",["result"]],["result",["usize","error"]]]]],[8,"AsyncBufReadExt","","An extension trait which adds utility methods to…",null,null],[11,"read_until","","Reads all bytes into `buf` until the delimiter `byte` or…",22,[[["self"],["vec"],["u8"]],["readuntil"]]],[11,"read_line","","Reads all bytes until a newline (the 0xA byte) is reached,…",22,[[["self"],["string"]],["readline"]]],[11,"split","","Returns a stream of the contents of this reader split on…",22,[[["u8"]],["split"]]],[11,"lines","","Returns a stream over the lines of this reader. This…",22,[[],["lines"]]],[8,"AsyncReadExt","","Reads bytes from a source.",null,null],[11,"chain","","Creates a new `AsyncRead` instance that chains this stream…",23,[[["r"]],["chain"]]],[11,"read","","Pulls some bytes from this source into the specified…",23,[[["self"]],["read"]]],[11,"read_buf","","Pulls some bytes from this source into the specified…",23,[[["self"],["b"]],["readbuf"]]],[11,"read_exact","","Reads the exact number of bytes required to fill `buf`.",23,[[["self"]],["readexact"]]],[11,"read_u8","","Reads an unsigned 8 bit integer from the underlying reader.",23,[[["self"]],[["self"],["readu8"]]]],[11,"read_i8","","Reads a signed 8 bit integer from the underlying reader.",23,[[["self"]],[["readi8"],["self"]]]],[11,"read_u16","","Reads an unsigned 16-bit integer in big-endian order from…",23,[[["self"]],[["readu16"],["self"]]]],[11,"read_i16","","Reads a signed 16-bit integer in big-endian order from the…",23,[[["self"]],[["readi16"],["self"]]]],[11,"read_u32","","Reads an unsigned 32-bit integer in big-endian order from…",23,[[["self"]],[["self"],["readu32"]]]],[11,"read_i32","","Reads a signed 32-bit integer in big-endian order from the…",23,[[["self"]],[["readi32"],["self"]]]],[11,"read_u64","","Reads an unsigned 64-bit integer in big-endian order from…",23,[[["self"]],[["self"],["readu64"]]]],[11,"read_i64","","Reads an signed 64-bit integer in big-endian order from…",23,[[["self"]],[["self"],["readi64"]]]],[11,"read_u128","","Reads an unsigned 128-bit integer in big-endian order from…",23,[[["self"]],[["self"],["readu128"]]]],[11,"read_i128","","Reads an signed 128-bit integer in big-endian order from…",23,[[["self"]],[["self"],["readi128"]]]],[11,"read_to_end","","Reads all bytes until EOF in this source, placing them…",23,[[["self"],["vec"]],["readtoend"]]],[11,"read_to_string","","Reads all bytes until EOF in this source, appending them…",23,[[["self"],["string"]],["readtostring"]]],[11,"take","","Creates an adaptor which reads at most `limit` bytes from…",23,[[["u64"]],["take"]]],[8,"AsyncSeekExt","","An extension trait which adds utility methods to…",null,null],[11,"seek","","Creates a future which will seek an IO object, and then…",24,[[["self"],["seekfrom"]],["seek"]]],[8,"AsyncWriteExt","","Writes bytes to a sink.",null,null],[11,"write","","Writes a buffer into this writer, returning how many bytes…",25,[[["self"]],["write"]]],[11,"write_buf","","Writes a buffer into this writer, advancing the buffer's…",25,[[["self"],["b"]],["writebuf"]]],[11,"write_all","","Attempts to write an entire buffer into this writer.",25,[[["self"]],["writeall"]]],[11,"write_u8","","Writes an unsigned 8-bit integer to the underlying writer.",25,[[["self"],["u8"]],[["self"],["writeu8"]]]],[11,"write_i8","","Writes an unsigned 8-bit integer to the underlying writer.",25,[[["self"],["i8"]],[["writei8"],["self"]]]],[11,"write_u16","","Writes an unsigned 16-bit integer in big-endian order to…",25,[[["u16"],["self"]],[["self"],["writeu16"]]]],[11,"write_i16","","Writes a signed 16-bit integer in big-endian order to the…",25,[[["self"],["i16"]],[["writei16"],["self"]]]],[11,"write_u32","","Writes an unsigned 32-bit integer in big-endian order to…",25,[[["self"],["u32"]],[["self"],["writeu32"]]]],[11,"write_i32","","Writes a signed 32-bit integer in big-endian order to the…",25,[[["self"],["i32"]],[["self"],["writei32"]]]],[11,"write_u64","","Writes an unsigned 64-bit integer in big-endian order to…",25,[[["self"],["u64"]],[["self"],["writeu64"]]]],[11,"write_i64","","Writes an signed 64-bit integer in big-endian order to the…",25,[[["i64"],["self"]],[["self"],["writei64"]]]],[11,"write_u128","","Writes an unsigned 128-bit integer in big-endian order to…",25,[[["self"],["u128"]],[["writeu128"],["self"]]]],[11,"write_i128","","Writes an signed 128-bit integer in big-endian order to…",25,[[["self"],["i128"]],[["self"],["writei128"]]]],[11,"flush","","Flushes this output stream, ensuring that all…",25,[[["self"]],["flush"]]],[11,"shutdown","","Shuts down the output stream, ensuring that the value can…",25,[[["self"]],["shutdown"]]],[0,"net","tokio","TCP/UDP/Unix bindings for `tokio`.",null,null],[3,"TcpListener","tokio::net","A TCP socket server, listening for connections.",null,null],[3,"TcpStream","","A TCP stream between a local and a remote socket.",null,null],[3,"UdpSocket","","A UDP socket",null,null],[3,"UnixDatagram","","An I/O object representing a Unix datagram socket.",null,null],[3,"UnixListener","","A Unix socket which can accept connections from other Unix…",null,null],[3,"UnixStream","","A structure representing a connected Unix socket.",null,null],[5,"lookup_host","","Performs a DNS resolution.",null,[[["t"]]]],[0,"tcp","","TCP utility types",null,null],[3,"Incoming","tokio::net::tcp","Stream returned by the `TcpListener::incoming` function…",null,null],[3,"ReadHalf","","Read half of a [`TcpStream`], created by [`split`].",null,null],[3,"WriteHalf","","Write half of a [`TcpStream`], created by [`split`].",null,null],[3,"OwnedReadHalf","","Owned read half of a [`TcpStream`], created by…",null,null],[3,"OwnedWriteHalf","","Owned write half of a [`TcpStream`], created by…",null,null],[3,"ReuniteError","","Error indicating two halves were not from the same socket,…",null,null],[12,"0","","",26,null],[12,"1","","",26,null],[11,"bind","tokio::net","Creates a new TcpListener which will be bound to the…",27,[[["tosocketaddrs"]]]],[11,"accept","","Accepts a new incoming connection from this listener.",27,[[["self"]]]],[11,"poll_accept","","Attempts to poll `SocketAddr` and `TcpStream` bound to…",27,[[["self"],["context"]],[["result"],["poll",["result"]]]]],[11,"from_std","","Creates a new TCP listener from the standard library's TCP…",27,[[["tcplistener"]],[["result",["tcplistener"]],["tcplistener"]]]],[11,"local_addr","","Returns the local address that this listener is bound to.",27,[[["self"]],[["socketaddr"],["result",["socketaddr"]]]]],[11,"incoming","","Returns a stream over the connections being received on…",27,[[["self"]],["incoming"]]],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",27,[[["self"]],[["u32"],["result",["u32"]]]]],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",27,[[["u32"],["self"]],["result"]]],[11,"poll_accept","tokio::net::tcp","Attempts to poll `TcpStream` by polling inner…",28,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["tcpstream"]]]]],[11,"poll_peek","","Attempt to receive data on the socket, without removing…",29,[[["self"],["context"]],[["result",["usize"]],["poll",["result"]]]]],[11,"peek","","Receives data on the socket from the remote address to…",29,[[["self"]]]],[11,"reunite","","Attempts to put the two halves of a `TcpStream` back…",30,[[["ownedwritehalf"]],[["tcpstream"],["reuniteerror"],["result",["tcpstream","reuniteerror"]]]]],[11,"poll_peek","","Attempt to receive data on the socket, without removing…",30,[[["self"],["context"]],[["result",["usize"]],["poll",["result"]]]]],[11,"peek","","Receives data on the socket from the remote address to…",30,[[["self"]]]],[11,"reunite","","Attempts to put the two halves of a `TcpStream` back…",31,[[["ownedreadhalf"]],[["tcpstream"],["reuniteerror"],["result",["tcpstream","reuniteerror"]]]]],[11,"forget","","Destroy the write half, but don't close the stream until…",31,[[]]],[11,"connect","tokio::net","Opens a TCP connection to a remote host.",32,[[["tosocketaddrs"]]]],[11,"from_std","","Creates new `TcpStream` from a `std::net::TcpStream`.",32,[[["tcpstream"]],[["tcpstream"],["result",["tcpstream"]]]]],[11,"local_addr","","Returns the local address that this stream is bound to.",32,[[["self"]],[["socketaddr"],["result",["socketaddr"]]]]],[11,"peer_addr","","Returns the remote address that this stream is connected to.",32,[[["self"]],[["socketaddr"],["result",["socketaddr"]]]]],[11,"poll_peek","","Attempts to receive data on the socket, without removing…",32,[[["self"],["context"]],[["result",["usize"]],["poll",["result"]]]]],[11,"peek","","Receives data on the socket from the remote address to…",32,[[["self"]]]],[11,"shutdown","","Shuts down the read, write, or both halves of this…",32,[[["shutdown"],["self"]],["result"]]],[11,"nodelay","","Gets the value of the `TCP_NODELAY` option on this socket.",32,[[["self"]],[["result",["bool"]],["bool"]]]],[11,"set_nodelay","","Sets the value of the `TCP_NODELAY` option on this socket.",32,[[["self"],["bool"]],["result"]]],[11,"recv_buffer_size","","Gets the value of the `SO_RCVBUF` option on this socket.",32,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"set_recv_buffer_size","","Sets the value of the `SO_RCVBUF` option on this socket.",32,[[["self"],["usize"]],["result"]]],[11,"send_buffer_size","","Gets the value of the `SO_SNDBUF` option on this socket.",32,[[["self"]],[["result",["usize"]],["usize"]]]],[11,"set_send_buffer_size","","Sets the value of the `SO_SNDBUF` option on this socket.",32,[[["self"],["usize"]],["result"]]],[11,"keepalive","","Returns whether keepalive messages are enabled on this…",32,[[["self"]],[["result",["option"]],["option",["duration"]]]]],[11,"set_keepalive","","Sets whether keepalive messages are enabled to be sent on…",32,[[["duration"],["self"],["option",["duration"]]],["result"]]],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",32,[[["self"]],[["u32"],["result",["u32"]]]]],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",32,[[["u32"],["self"]],["result"]]],[11,"linger","","Reads the linger duration for this socket by getting the…",32,[[["self"]],[["result",["option"]],["option",["duration"]]]]],[11,"set_linger","","Sets the linger duration of this socket by setting the…",32,[[["duration"],["self"],["option",["duration"]]],["result"]]],[11,"split","","Splits a `TcpStream` into a read half and a write half,…",32,[[["self"]]]],[11,"into_split","","Splits a `TcpStream` into a read half and a write half,…",32,[[]]],[0,"udp","","UDP utility types.",null,null],[3,"RecvHalf","tokio::net::udp","The recv half after `split`.",null,null],[3,"ReuniteError","","Error indicating two halves were not from the same socket,…",null,null],[12,"0","","",33,null],[12,"1","","",33,null],[3,"SendHalf","","The send half after `split`.",null,null],[11,"bind","tokio::net","This function will create a new UDP socket and attempt to…",34,[[["tosocketaddrs"]]]],[11,"from_std","","Creates a new `UdpSocket` from the previously bound socket…",34,[[["udpsocket"]],[["udpsocket"],["result",["udpsocket"]]]]],[11,"split","","Splits the `UdpSocket` into a receive half and a send…",34,[[]]],[11,"local_addr","","Returns the local address that this socket is bound to.",34,[[["self"]],[["socketaddr"],["result",["socketaddr"]]]]],[11,"connect","","Connects the UDP socket setting the default destination…",34,[[["self"],["tosocketaddrs"]]]],[11,"send","","Returns a future that sends data on the socket to the…",34,[[["self"]]]],[11,"recv","","Returns a future that receives a single datagram message…",34,[[["self"]]]],[11,"send_to","","Returns a future that sends data on the socket to the…",34,[[["tosocketaddrs"],["self"]]]],[11,"recv_from","","Returns a future that receives a single datagram on the…",34,[[["self"]]]],[11,"broadcast","","Gets the value of the `SO_BROADCAST` option for this socket.",34,[[["self"]],[["result",["bool"]],["bool"]]]],[11,"set_broadcast","","Sets the value of the `SO_BROADCAST` option for this socket.",34,[[["self"],["bool"]],["result"]]],[11,"multicast_loop_v4","","Gets the value of the `IP_MULTICAST_LOOP` option for this…",34,[[["self"]],[["result",["bool"]],["bool"]]]],[11,"set_multicast_loop_v4","","Sets the value of the `IP_MULTICAST_LOOP` option for this…",34,[[["self"],["bool"]],["result"]]],[11,"multicast_ttl_v4","","Gets the value of the `IP_MULTICAST_TTL` option for this…",34,[[["self"]],[["u32"],["result",["u32"]]]]],[11,"set_multicast_ttl_v4","","Sets the value of the `IP_MULTICAST_TTL` option for this…",34,[[["u32"],["self"]],["result"]]],[11,"multicast_loop_v6","","Gets the value of the `IPV6_MULTICAST_LOOP` option for…",34,[[["self"]],[["result",["bool"]],["bool"]]]],[11,"set_multicast_loop_v6","","Sets the value of the `IPV6_MULTICAST_LOOP` option for…",34,[[["self"],["bool"]],["result"]]],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",34,[[["self"]],[["u32"],["result",["u32"]]]]],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",34,[[["u32"],["self"]],["result"]]],[11,"join_multicast_v4","","Executes an operation of the `IP_ADD_MEMBERSHIP` type.",34,[[["self"],["ipv4addr"]],["result"]]],[11,"join_multicast_v6","","Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.",34,[[["ipv6addr"],["self"],["u32"]],["result"]]],[11,"leave_multicast_v4","","Executes an operation of the `IP_DROP_MEMBERSHIP` type.",34,[[["self"],["ipv4addr"]],["result"]]],[11,"leave_multicast_v6","","Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.",34,[[["ipv6addr"],["self"],["u32"]],["result"]]],[11,"reunite","tokio::net::udp","Attempts to put the two \"halves\" of a `UdpSocket` back…",35,[[["sendhalf"]],[["udpsocket"],["reuniteerror"],["result",["udpsocket","reuniteerror"]]]]],[11,"recv_from","","Returns a future that receives a single datagram on the…",35,[[["self"]]]],[11,"recv","","Returns a future that receives a single datagram message…",35,[[["self"]]]],[11,"reunite","","Attempts to put the two \"halves\" of a `UdpSocket` back…",36,[[["recvhalf"]],[["udpsocket"],["reuniteerror"],["result",["udpsocket","reuniteerror"]]]]],[11,"send_to","","Returns a future that sends data on the socket to the…",36,[[["socketaddr"],["self"]]]],[11,"send","","Returns a future that sends data on the socket to the…",36,[[["self"]]]],[0,"unix","tokio::net","Unix domain socket utility types",null,null],[3,"Incoming","tokio::net::unix","Stream of listeners",null,null],[3,"ReadHalf","","Read half of a `UnixStream`.",null,null],[3,"WriteHalf","","Write half of a `UnixStream`.",null,null],[3,"UCred","","Credentials of a process",null,null],[12,"uid","","UID (user ID) of the process",37,null],[12,"gid","","GID (group ID) of the process",37,null],[11,"bind","tokio::net","Creates a new `UnixDatagram` bound to the specified path.",38,[[["p"]],[["result",["unixdatagram"]],["unixdatagram"]]]],[11,"pair","","Creates an unnamed pair of connected sockets.",38,[[],["result"]]],[11,"from_std","","Consumes a `UnixDatagram` in the standard library and…",38,[[["unixdatagram"]],[["result",["unixdatagram"]],["unixdatagram"]]]],[11,"unbound","","Creates a new `UnixDatagram` which is not bound to any…",38,[[],[["result",["unixdatagram"]],["unixdatagram"]]]],[11,"connect","","Connects the socket to the specified address.",38,[[["path"],["self"],["asref",["path"]]],["result"]]],[11,"send","","Sends data on the socket to the socket's peer.",38,[[["self"]]]],[11,"recv","","Receives data from the socket.",38,[[["self"]]]],[11,"send_to","","Sends data on the socket to the specified address.",38,[[["p"],["self"]]]],[11,"recv_from","","Receives data from the socket.",38,[[["self"]]]],[11,"local_addr","","Returns the local address that this socket is bound to.",38,[[["self"]],[["socketaddr"],["result",["socketaddr"]]]]],[11,"peer_addr","","Returns the address of this socket's peer.",38,[[["self"]],[["socketaddr"],["result",["socketaddr"]]]]],[11,"take_error","","Returns the value of the `SO_ERROR` option.",38,[[["self"]],[["option",["error"]],["result",["option"]]]]],[11,"shutdown","","Shuts down the read, write, or both halves of this…",38,[[["shutdown"],["self"]],["result"]]],[11,"poll_accept","tokio::net::unix","Attempts to poll `UnixStream` by polling inner…",39,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["unixstream"]]]]],[11,"bind","tokio::net","Creates a new `UnixListener` bound to the specified path.",40,[[["p"]],[["unixlistener"],["result",["unixlistener"]]]]],[11,"from_std","","Consumes a `UnixListener` in the standard library and…",40,[[["unixlistener"]],[["unixlistener"],["result",["unixlistener"]]]]],[11,"local_addr","","Returns the local socket address of this listener.",40,[[["self"]],[["socketaddr"],["result",["socketaddr"]]]]],[11,"take_error","","Returns the value of the `SO_ERROR` option.",40,[[["self"]],[["option",["error"]],["result",["option"]]]]],[11,"accept","","Accepts a new incoming connection to this listener.",40,[[["self"]]]],[11,"incoming","","Returns a stream over the connections being received on…",40,[[["self"]],["incoming"]]],[11,"connect","","Connects to the socket named by `path`.",41,[[["p"]]]],[11,"from_std","","Consumes a `UnixStream` in the standard library and…",41,[[["unixstream"]],[["result",["unixstream"]],["unixstream"]]]],[11,"pair","","Creates an unnamed pair of connected sockets.",41,[[],["result"]]],[11,"local_addr","","Returns the socket address of the local half of this…",41,[[["self"]],[["socketaddr"],["result",["socketaddr"]]]]],[11,"peer_addr","","Returns the socket address of the remote half of this…",41,[[["self"]],[["socketaddr"],["result",["socketaddr"]]]]],[11,"peer_cred","","Returns effective credentials of the process which called…",41,[[["self"]],[["ucred"],["result",["ucred"]]]]],[11,"take_error","","Returns the value of the `SO_ERROR` option.",41,[[["self"]],[["option",["error"]],["result",["option"]]]]],[11,"shutdown","","Shuts down the read, write, or both halves of this…",41,[[["shutdown"],["self"]],["result"]]],[11,"split","","Split a `UnixStream` into a read half and a write half,…",41,[[["self"]]]],[8,"ToSocketAddrs","","Converts or resolves without blocking to one or more…",null,null],[0,"prelude","tokio","A \"prelude\" for users of the `tokio` crate.",null,null],[8,"AsyncBufRead","tokio::prelude","Reads bytes asynchronously.",null,null],[10,"poll_fill_buf","","Attempts to return the contents of the internal buffer,…",18,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[10,"consume","","Tells this buffer that `amt` bytes have been consumed from…",18,[[["pin"],["self"],["usize"]]]],[8,"AsyncRead","","Reads bytes from a source.",null,null],[11,"prepare_uninitialized_buffer","tokio::io","Prepares an uninitialized buffer to be safe to pass to…",19,[[["self"]],["bool"]]],[10,"poll_read","tokio::prelude","Attempts to read from the `AsyncRead` into `buf`.",19,[[["context"],["pin"],["self"]],[["result",["usize"]],["poll",["result"]]]]],[11,"poll_read_buf","tokio::io","Pulls some bytes from this source into the specified…",19,[[["b"],["context"],["pin"],["self"]],[["result",["usize"]],["poll",["result"]]]]],[8,"AsyncWrite","tokio::prelude","Writes bytes asynchronously.",null,null],[10,"poll_write","","Attempt to write bytes from `buf` into the object.",21,[[["context"],["pin"],["self"]],[["poll",["result"]],["result",["usize","error"]]]]],[10,"poll_flush","","Attempts to flush the object, ensuring that any buffered…",21,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["error"]]]]],[10,"poll_shutdown","","Initiates or attempts to shut down this writer, returning…",21,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["error"]]]]],[11,"poll_write_buf","tokio::io","Writes a `Buf` into this value, returning how many bytes…",21,[[["b"],["context"],["pin"],["self"]],[["poll",["result"]],["result",["usize","error"]]]]],[0,"process","tokio","An implementation of asynchronous process management for…",null,null],[3,"Command","tokio::process","This structure mimics the API of [`std::process::Command`]…",null,null],[3,"Child","","Representation of a child process spawned onto an event…",null,null],[12,"stdin","","The handle for writing to the child's standard input…",42,null],[12,"stdout","","The handle for reading from the child's standard output…",42,null],[12,"stderr","","The handle for reading from the child's standard error…",42,null],[3,"ChildStdin","","The standard input stream for spawned children.",null,null],[3,"ChildStdout","","The standard output stream for spawned children.",null,null],[3,"ChildStderr","","The standard error stream for spawned children.",null,null],[11,"new","","Constructs a new `Command` for launching the program at…",43,[[["asref",["osstr"]],["osstr"]],["command"]]],[11,"arg","","Adds an argument to pass to the program.",43,[[["self"],["asref",["osstr"]],["osstr"]],["command"]]],[11,"args","","Adds multiple arguments to pass to the program.",43,[[["self"],["i"]],["command"]]],[11,"env","","Inserts or updates an environment variable mapping.",43,[[["self"],["k"],["v"]],["command"]]],[11,"envs","","Adds or updates multiple environment variable mappings.",43,[[["self"],["i"]],["command"]]],[11,"env_remove","","Removes an environment variable mapping.",43,[[["self"],["asref",["osstr"]],["osstr"]],["command"]]],[11,"env_clear","","Clears the entire environment map for the child process.",43,[[["self"]],["command"]]],[11,"current_dir","","Sets the working directory for the child process.",43,[[["path"],["self"],["asref",["path"]]],["command"]]],[11,"stdin","","Sets configuration for the child process's standard input…",43,[[["into",["stdio"]],["self"],["stdio"]],["command"]]],[11,"stdout","","Sets configuration for the child process's standard output…",43,[[["into",["stdio"]],["self"],["stdio"]],["command"]]],[11,"stderr","","Sets configuration for the child process's standard error…",43,[[["into",["stdio"]],["self"],["stdio"]],["command"]]],[11,"kill_on_drop","","Controls whether a `kill` operation should be invoked on a…",43,[[["self"],["bool"]],["command"]]],[11,"uid","","Sets the child process's user ID. This translates to a…",43,[[["self"],["u32"]],["command"]]],[11,"gid","","Similar to `uid` but sets the group ID of the child…",43,[[["self"],["u32"]],["command"]]],[11,"pre_exec","","Schedules a closure to be run just before the `exec`…",43,[[["self"],["f"]],["command"]]],[11,"spawn","","Executes the command as a child process, returning a…",43,[[["self"]],[["child"],["result",["child"]]]]],[11,"status","","Executes the command as a child process, waiting for it to…",43,[[["self"]]]],[11,"output","","Executes the command as a child process, waiting for it to…",43,[[["self"]]]],[11,"id","","Returns the OS-assigned process identifier associated with…",42,[[["self"]],["u32"]]],[11,"kill","","Forces the child to exit.",42,[[["self"]],["result"]]],[11,"wait_with_output","","Returns a future that will resolve to an `Output`,…",42,[[]]],[0,"runtime","tokio","The Tokio runtime.",null,null],[3,"Builder","tokio::runtime","Builds Tokio Runtime with custom configuration values.",null,null],[3,"Handle","","Handle to the runtime.",null,null],[3,"TryCurrentError","","Error returned by `try_current` when no Runtime has been…",null,null],[3,"Runtime","","The Tokio runtime.",null,null],[11,"new","","Returns a new runtime builder initialized with default…",44,[[],["builder"]]],[11,"enable_all","","Enables both I/O and time drivers.",44,[[["self"]],["self"]]],[11,"num_threads","","Sets the maximum number of worker threads for the…",44,[[["self"],["usize"]],["self"]]],[11,"core_threads","","Sets the core number of worker threads for the `Runtime`'s…",44,[[["self"],["usize"]],["self"]]],[11,"max_threads","","Specifies limit for threads, spawned by the Runtime.",44,[[["self"],["usize"]],["self"]]],[11,"thread_name","","Sets name of threads spawned by the `Runtime`'s thread pool.",44,[[["self"]],["self"]]],[11,"thread_stack_size","","Sets the stack size (in bytes) for worker threads.",44,[[["self"],["usize"]],["self"]]],[11,"on_thread_start","","Executes function `f` after each thread is started but…",44,[[["self"],["f"]],["self"]]],[11,"on_thread_stop","","Executes function `f` before each thread stops.",44,[[["self"],["f"]],["self"]]],[11,"build","","Creates the configured `Runtime`.",44,[[["self"]],[["result",["runtime"]],["runtime"]]]],[11,"enable_io","","Enables the I/O driver.",44,[[["self"]],["self"]]],[11,"enable_time","","Enables the time driver.",44,[[["self"]],["self"]]],[11,"basic_scheduler","","Sets runtime to use a simpler scheduler that runs all…",44,[[["self"]],["self"]]],[11,"threaded_scheduler","","Sets runtime to use a multi-threaded scheduler for…",44,[[["self"]],["self"]]],[11,"enter","","Enter the runtime context. This allows you to construct…",45,[[["self"],["f"]],["r"]]],[11,"current","","Returns a `Handle` view over the currently running `Runtime`",45,[[],["self"]]],[11,"try_current","","Returns a Handle view over the currently running Runtime",45,[[],[["result",["trycurrenterror"]],["trycurrenterror"]]]],[11,"spawn","","Spawns a future onto the Tokio runtime.",45,[[["self"],["f"]],["joinhandle"]]],[11,"block_on","","Run a future to completion on the Tokio runtime from a…",45,[[["self"],["future"]]]],[11,"spawn_blocking","","Runs the provided closure on a thread where blocking is…",45,[[["self"],["f"]],["joinhandle"]]],[11,"new","","Create a new runtime instance with default configuration…",46,[[],[["result",["runtime"]],["runtime"]]]],[11,"spawn","","Spawn a future onto the Tokio runtime.",46,[[["self"],["f"]],["joinhandle"]]],[11,"block_on","","Run a future to completion on the Tokio runtime. This is…",46,[[["self"],["future"]]]],[11,"enter","","Enter the runtime context. This allows you to construct…",46,[[["self"],["f"]],["r"]]],[11,"handle","","Return a handle to the runtime's spawner.",46,[[["self"]],["handle"]]],[11,"shutdown_timeout","","Shutdown the runtime, waiting for at most `duration` for…",46,[[["duration"]]]],[0,"signal","tokio","Asynchronous signal handling for Tokio",null,null],[5,"ctrl_c","tokio::signal","Completes when a \"ctrl-c\" notification is sent to the…",null,[[]]],[0,"unix","","Unix-specific types for signal handling.",null,null],[3,"SignalKind","tokio::signal::unix","Represents the specific kind of signal to listen for.",null,null],[3,"Signal","","A stream of events for receiving a particular type of OS…",null,null],[5,"signal","","Creates a new stream which will receive notifications when…",null,[[["signalkind"]],[["result",["signal"]],["signal"]]]],[11,"from_raw","","Allows for listening to any valid OS signal.",47,[[["c_int"]],["self"]]],[11,"alarm","","Represents the SIGALRM signal.",47,[[],["self"]]],[11,"child","","Represents the SIGCHLD signal.",47,[[],["self"]]],[11,"hangup","","Represents the SIGHUP signal.",47,[[],["self"]]],[11,"interrupt","","Represents the SIGINT signal.",47,[[],["self"]]],[11,"io","","Represents the SIGIO signal.",47,[[],["self"]]],[11,"pipe","","Represents the SIGPIPE signal.",47,[[],["self"]]],[11,"quit","","Represents the SIGQUIT signal.",47,[[],["self"]]],[11,"terminate","","Represents the SIGTERM signal.",47,[[],["self"]]],[11,"user_defined1","","Represents the SIGUSR1 signal.",47,[[],["self"]]],[11,"user_defined2","","Represents the SIGUSR2 signal.",47,[[],["self"]]],[11,"window_change","","Represents the SIGWINCH signal.",47,[[],["self"]]],[11,"recv","","Receives the next signal notification event.",48,[[["self"]]]],[11,"poll_recv","","Polls to receive the next signal notification event,…",48,[[["self"],["context"]],[["poll",["option"]],["option"]]]],[0,"stream","tokio","Stream utilities for Tokio.",null,null],[8,"Stream","tokio::stream","A stream of values produced asynchronously.",null,null],[16,"Item","","Values yielded by the stream.",49,null],[10,"poll_next","","Attempt to pull out the next value of this stream,…",49,[[["self"],["context"],["pin"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","Returns the bounds on the remaining length of the stream.",49,[[["self"]]]],[3,"Empty","","Stream for the `empty` function.",null,null],[3,"Iter","","Stream for the `iter` function.",null,null],[3,"Once","","Stream for the `once` function.",null,null],[3,"Pending","","Stream for the `pending` function.",null,null],[3,"StreamMap","","Combine many streams into one, indexing each source stream…",null,null],[5,"empty","","Creates a stream that yields nothing.",null,[[],["empty"]]],[5,"iter","","Converts an `Iterator` into a `Stream` which is always…",null,[[["i"]],["iter"]]],[5,"once","","Creates a stream that emits an element exactly once.",null,[[["t"]],["once"]]],[5,"pending","","Creates a stream that is never ready",null,[[],["pending"]]],[11,"new","","Creates an empty `StreamMap`.",50,[[],["streammap"]]],[11,"with_capacity","","Creates an empty `StreamMap` with the specified capacity.",50,[[["usize"]],["streammap"]]],[11,"keys","","Returns an iterator visiting all keys in arbitrary order.",50,[[["self"]]]],[11,"values","","An iterator visiting all values in arbitrary order.",50,[[["self"]]]],[11,"values_mut","","An iterator visiting all values mutably in arbitrary order.",50,[[["self"]]]],[11,"capacity","","Returns the number of streams the map can hold without…",50,[[["self"]],["usize"]]],[11,"len","","Returns the number of streams in the map.",50,[[["self"]],["usize"]]],[11,"is_empty","","Returns `true` if the map contains no elements.",50,[[["self"]],["bool"]]],[11,"clear","","Clears the map, removing all key-stream pairs. Keeps the…",50,[[["self"]]]],[11,"insert","","Insert a key-stream pair into the map.",50,[[["self"],["k"],["v"]],["option"]]],[11,"remove","","Removes a key from the map, returning the stream at the…",50,[[["self"],["q"]],["option"]]],[11,"contains_key","","Returns `true` if the map contains a stream for the…",50,[[["self"],["q"]],["bool"]]],[8,"FromStream","","Convert from a `Stream`.",null,null],[8,"StreamExt","","An extension trait for `Stream`s that provides a variety…",null,null],[11,"next","","Consumes and returns the next value in the stream or…",51,[[["self"]],["next"]]],[11,"try_next","","Consumes and returns the next item in the stream. If an…",51,[[["self"]],["trynext"]]],[11,"map","","Maps this stream's items to a different type, returning a…",51,[[["f"]],["map"]]],[11,"merge","","Combine two streams into one by interleaving the output of…",51,[[["u"]],["merge"]]],[11,"filter","","Filters the values produced by this stream according to…",51,[[["f"]],["filter"]]],[11,"filter_map","","Filters the values produced by this stream while…",51,[[["f"]],["filtermap"]]],[11,"fuse","","Creates a stream which ends after the first `None`.",51,[[],["fuse"]]],[11,"take","","Creates a new stream of at most `n` items of the…",51,[[["usize"]],["take"]]],[11,"take_while","","Take elements from this stream while the provided…",51,[[["f"]],["takewhile"]]],[11,"skip","","Creates a new stream that will skip the `n` first items of…",51,[[["usize"]],["skip"]]],[11,"skip_while","","Skip elements from the underlying stream while the…",51,[[["f"]],["skipwhile"]]],[11,"all","","Tests if every element of the stream matches a predicate.",51,[[["self"],["f"]],["allfuture"]]],[11,"any","","Tests if any element of the stream matches a predicate.",51,[[["self"],["f"]],["anyfuture"]]],[11,"chain","","Combine two streams into one by first returning all values…",51,[[["u"]],["chain"]]],[11,"fold","","A combinator that applies a function to every element in a…",51,[[["b"],["f"]],["foldfuture"]]],[11,"collect","","Drain stream pushing all emitted values into a collection.",51,[[],["collect"]]],[11,"timeout","","Applies a per-item timeout to the passed stream.",51,[[["duration"]],["timeout"]]],[0,"sync","tokio","Synchronization primitives for use in asynchronous contexts.",null,null],[3,"Barrier","tokio::sync","A barrier enables multiple threads to synchronize the…",null,null],[3,"BarrierWaitResult","","A `BarrierWaitResult` is returned by `wait` when all…",null,null],[3,"Mutex","","An asynchronous `Mutex`-like type.",null,null],[3,"MutexGuard","","A handle to a held `Mutex`.",null,null],[3,"TryLockError","","Error returned from the [`Mutex::try_lock`] function.",null,null],[3,"OwnedMutexGuard","","An owned handle to a held `Mutex`.",null,null],[3,"Notify","","Notify a single task to wake up.",null,null],[3,"Semaphore","","Counting semaphore performing asynchronous permit…",null,null],[3,"SemaphorePermit","","A permit from the semaphore.",null,null],[3,"OwnedSemaphorePermit","","An owned permit from the semaphore.",null,null],[3,"RwLock","","An asynchronous reader-writer lock",null,null],[3,"RwLockReadGuard","","RAII structure used to release the shared read access of a…",null,null],[3,"RwLockWriteGuard","","RAII structure used to release the exclusive write access…",null,null],[11,"new","","Creates a new barrier that can block a given number of…",52,[[["usize"]],["barrier"]]],[11,"wait","","Does not resolve until all tasks have rendezvoused here.",52,[[["self"]]]],[11,"is_leader","","Returns `true` if this thread from wait is the \"leader…",53,[[["self"]],["bool"]]],[0,"broadcast","","A multi-producer, multi-consumer broadcast queue. Each…",null,null],[3,"Sender","tokio::sync::broadcast","Sending-half of the [`broadcast`] channel.",null,null],[3,"Receiver","","Receiving-half of the [`broadcast`] channel.",null,null],[3,"SendError","","Error returned by [`Sender::send`][Sender::send].",null,null],[12,"0","","",54,null],[4,"RecvError","","An error returned from the [`recv`] function on a…",null,null],[13,"Closed","","There are no more active senders implying no further…",55,null],[13,"Lagged","","The receiver lagged too far behind. Attempting to receive…",55,null],[4,"TryRecvError","","An error returned from the [`try_recv`] function on a…",null,null],[13,"Empty","","The channel is currently empty. There are still active…",56,null],[13,"Closed","","There are no more active senders implying no further…",56,null],[13,"Lagged","","The receiver lagged too far behind and has been forcibly…",56,null],[5,"channel","","Create a bounded, multi-producer, multi-consumer channel…",null,[[["usize"]]]],[11,"send","","Attempts to send a value to all active [`Receiver`]…",57,[[["self"],["t"]],[["senderror"],["usize"],["result",["usize","senderror"]]]]],[11,"subscribe","","Creates a new [`Receiver`] handle that will receive values…",57,[[["self"]],["receiver"]]],[11,"receiver_count","","Returns the number of active receivers",57,[[["self"]],["usize"]]],[11,"try_recv","","Attempts to return a pending value on this receiver…",58,[[["self"]],[["result",["tryrecverror"]],["tryrecverror"]]]],[11,"recv","","Receives the next value for this receiver.",58,[[["self"]]]],[11,"into_stream","","Convert the receiver into a `Stream`.",58,[[]]],[0,"mpsc","tokio::sync","A multi-producer, single-consumer queue for sending values…",null,null],[3,"Receiver","tokio::sync::mpsc","Receive values from the associated `Sender`.",null,null],[3,"Sender","","Send values to the associated `Receiver`.",null,null],[3,"UnboundedReceiver","","Receive values from the associated `UnboundedSender`.",null,null],[3,"UnboundedSender","","Send values to the associated `UnboundedReceiver`.",null,null],[5,"channel","","Creates a bounded mpsc channel for communicating between…",null,[[["usize"]]]],[5,"unbounded_channel","","Creates an unbounded mpsc channel for communicating…",null,[[]]],[11,"recv","","Receives the next value for this receiver.",59,[[["self"]]]],[11,"try_recv","","Attempts to return a pending value on this receiver…",59,[[["self"]],[["tryrecverror"],["result",["tryrecverror"]]]]],[11,"close","","Closes the receiving half of a channel, without dropping it.",59,[[["self"]]]],[11,"send","","Sends a value, waiting until there is capacity.",60,[[["t"],["self"]]]],[11,"try_send","","Attempts to immediately send a message on this `Sender`",60,[[["self"],["t"]],[["result",["trysenderror"]],["trysenderror"]]]],[11,"send_timeout","","Sends a value, waiting until there is capacity, but only…",60,[[["duration"],["t"],["self"]]]],[11,"poll_ready","","Returns `Poll::Ready(Ok(()))` when the channel is able to…",60,[[["self"],["context"]],[["result",["closederror"]],["poll",["result"]]]]],[11,"disarm","","Undo a successful call to `poll_ready`.",60,[[["self"]],["bool"]]],[11,"recv","","Receives the next value for this receiver.",61,[[["self"]]]],[11,"try_recv","","Attempts to return a pending value on this receiver…",61,[[["self"]],[["tryrecverror"],["result",["tryrecverror"]]]]],[11,"close","","Closes the receiving half of a channel, without dropping it.",61,[[["self"]]]],[11,"send","","Attempts to send a message on this `UnboundedSender`…",62,[[["self"],["t"]],[["result",["senderror"]],["senderror"]]]],[0,"error","","Channel error types",null,null],[3,"SendError","tokio::sync::mpsc::error","Error returned by the `Sender`.",null,null],[12,"0","","",63,null],[3,"RecvError","","Error returned by `Receiver`.",null,null],[3,"ClosedError","","Error returned by `Sender::poll_ready`.",null,null],[4,"TrySendError","","This enumeration is the list of the possible error…",null,null],[13,"Full","","The data could not be sent on the channel because the…",64,null],[13,"Closed","","The receive half of the channel was explicitly closed or…",64,null],[4,"TryRecvError","","This enumeration is the list of the possible reasons that…",null,null],[13,"Empty","","This channel is currently empty, but the Sender(s) have…",65,null],[13,"Closed","","The channel's sending half has been closed, and there will…",65,null],[4,"SendTimeoutError","","Error returned by `Sender::send_timeout`].",null,null],[13,"Timeout","","The data could not be sent on the channel because the…",66,null],[13,"Closed","","The receive half of the channel was explicitly closed or…",66,null],[11,"new","tokio::sync","Creates a new lock in an unlocked state ready for use.",67,[[["t"]],["self"]]],[11,"lock","","Locks this mutex, causing the current task to yield until…",67,[[["self"]]]],[11,"lock_owned","","Locks this mutex, causing the current task to yield until…",67,[[["arc"]]]],[11,"try_lock","","Attempts to acquire the lock, and returns [`TryLockError`]…",67,[[["self"]],[["mutexguard"],["trylockerror"],["result",["mutexguard","trylockerror"]]]]],[11,"try_lock_owned","","Attempts to acquire the lock, and returns [`TryLockError`]…",67,[[["arc"]],[["ownedmutexguard"],["trylockerror"],["result",["ownedmutexguard","trylockerror"]]]]],[11,"into_inner","","Consumes the mutex, returning the underlying data. #…",67,[[],["t"]]],[11,"new","","Create a new `Notify`, initialized without a permit.",68,[[],["notify"]]],[11,"notified","","Wait for a notification.",68,[[["self"]]]],[11,"notify","","Notifies a waiting task",68,[[["self"]]]],[0,"oneshot","","A channel for sending a single message between…",null,null],[3,"Sender","tokio::sync::oneshot","Sends a value to the associated `Receiver`.",null,null],[3,"Receiver","","Receive a value from the associated `Sender`.",null,null],[5,"channel","","Create a new one-shot channel for sending single values…",null,[[]]],[0,"error","","Oneshot error types",null,null],[3,"RecvError","tokio::sync::oneshot::error","Error returned by the `Future` implementation for…",null,null],[4,"TryRecvError","","Error returned by the `try_recv` function on `Receiver`.",null,null],[13,"Empty","","The send half of the channel has not yet sent a value.",69,null],[13,"Closed","","The send half of the channel was dropped without sending a…",69,null],[11,"send","tokio::sync::oneshot","Attempts to send a value on this channel, returning it…",70,[[["t"]],["result"]]],[11,"closed","","Waits for the associated [`Receiver`] handle to close.",70,[[["self"]]]],[11,"is_closed","","Returns `true` if the associated [`Receiver`] handle has…",70,[[["self"]],["bool"]]],[11,"close","","Prevents the associated [`Sender`] handle from sending a…",71,[[["self"]]]],[11,"try_recv","","Attempts to receive a value.",71,[[["self"]],[["result",["tryrecverror"]],["tryrecverror"]]]],[11,"new","tokio::sync","Creates a new semaphore with the initial number of permits.",72,[[["usize"]],["self"]]],[11,"available_permits","","Returns the current number of available permits.",72,[[["self"]],["usize"]]],[11,"add_permits","","Adds `n` new permits to the semaphore.",72,[[["self"],["usize"]]]],[11,"acquire","","Acquires permit from the semaphore.",72,[[["self"]]]],[11,"try_acquire","","Tries to acquire a permit from the semaphore.",72,[[["self"]],[["semaphorepermit"],["tryacquireerror"],["result",["semaphorepermit","tryacquireerror"]]]]],[11,"acquire_owned","","Acquires permit from the semaphore.",72,[[["arc"]]]],[11,"try_acquire_owned","","Tries to acquire a permit from the semaphore.",72,[[["arc"]],[["ownedsemaphorepermit"],["tryacquireerror"],["result",["ownedsemaphorepermit","tryacquireerror"]]]]],[11,"forget","","Forgets the permit without releasing it back to the…",73,[[]]],[11,"forget","","Forgets the permit without releasing it back to the…",74,[[]]],[11,"new","","Creates a new instance of an `RwLock<T>` which is unlocked.",75,[[["t"]],["rwlock"]]],[11,"read","","Locks this rwlock with shared read access, causing the…",75,[[["self"]]]],[11,"write","","Locks this rwlock with exclusive write access, causing the…",75,[[["self"]]]],[11,"into_inner","","Consumes the lock, returning the underlying data.",75,[[],["t"]]],[0,"watch","","A single-producer, multi-consumer channel that only…",null,null],[3,"Receiver","tokio::sync::watch","Receives values from the associated `Sender`.",null,null],[3,"Sender","","Sends values to the associated `Receiver`.",null,null],[3,"Ref","","Returns a reference to the inner value",null,null],[5,"channel","","Creates a new watch channel, returning the \"send\" and…",null,[[["clone"]]]],[0,"error","","Watch error types",null,null],[3,"SendError","tokio::sync::watch::error","Error produced when sending a value fails.",null,null],[11,"borrow","tokio::sync::watch","Returns a reference to the most recently sent value",76,[[["self"]],["ref"]]],[11,"recv","","Attempts to clone the latest value sent via the channel.",76,[[["self"]]]],[11,"broadcast","","Broadcasts a new value via the channel, notifying all…",77,[[["self"],["t"]],[["senderror"],["result",["senderror"]]]]],[11,"closed","","Completes when all receivers have dropped.",77,[[["self"]]]],[0,"task","tokio","Asynchronous green-threads.",null,null],[3,"JoinError","tokio::task","Task failed to execute to completion.",null,null],[3,"JoinHandle","","An owned permission to join on a task (await its…",null,null],[3,"LocalSet","","A set of tasks which are executed on the same thread.",null,null],[3,"LocalKey","","A key for task-local data.",null,null],[5,"spawn_blocking","","Runs the provided closure on a thread where blocking is…",null,[[["f"]],["joinhandle"]]],[5,"block_in_place","","Runs the provided blocking function on the current thread…",null,[[["f"]],["r"]]],[5,"spawn","","Spawns a new asynchronous task, returning a `JoinHandle`…",null,[[["t"]],["joinhandle"]]],[5,"yield_now","","Yields execution back to the Tokio runtime.",null,[[]]],[5,"spawn_local","","Spawns a `!Send` future on the local task set.",null,[[["f"]],["joinhandle"]]],[11,"new","","Returns a new local task set.",78,[[],["localset"]]],[11,"spawn_local","","Spawns a `!Send` task onto the local task set.",78,[[["self"],["f"]],["joinhandle"]]],[11,"block_on","","Runs a future to completion on the provided runtime,…",78,[[["runtime"],["self"],["f"]]]],[11,"run_until","","Run a future to completion on the local set, returning its…",78,[[["self"],["f"]]]],[11,"scope","","Sets a value `T` as the task-local value for the future `F`.",79,[[["self"],["t"],["f"]]]],[11,"with","","Accesses the current task-local and runs the provided…",79,[[["self"],["f"]],["r"]]],[11,"try_with","","Accesses the current task-local and runs the provided…",79,[[["self"],["f"]],[["result",["accesserror"]],["accesserror"]]]],[11,"get","","Returns a copy of the task-local value if the task-local…",79,[[["self"]],["t"]]],[0,"time","tokio","Utilities for tracking time.",null,null],[3,"Duration","tokio::time","A `Duration` type to represent a span of time, typically…",null,null],[3,"DelayQueue","","A queue of delayed elements.",null,null],[3,"Delay","","Future returned by `delay_until` and `delay_for`.",null,null],[3,"Error","","Errors encountered by the timer implementation.",null,null],[3,"Instant","","A measurement of the system clock, useful for talking to…",null,null],[3,"Interval","","Stream returned by `interval` and `interval_at`.",null,null],[3,"Elapsed","","Error returned by `Timeout`.",null,null],[3,"Timeout","","Future returned by `timeout` and `timeout_at`.",null,null],[3,"Throttle","","Stream for the `throttle` function.",null,null],[5,"advance","","Advance time",null,[[["duration"]]]],[5,"pause","","Pause time",null,[[]]],[5,"resume","","Resume time",null,[[]]],[5,"delay_for","","Waits until `duration` has elapsed.",null,[[["duration"]],["delay"]]],[5,"delay_until","","Waits until `deadline` is reached.",null,[[["instant"]],["delay"]]],[5,"interval","","Creates new `Interval` that yields with interval of…",null,[[["duration"]],["interval"]]],[5,"interval_at","","Creates new `Interval` that yields with interval of…",null,[[["instant"],["duration"]],["interval"]]],[5,"timeout","","Require a `Future` to complete before the specified…",null,[[["t"],["duration"]],["timeout"]]],[5,"timeout_at","","Require a `Future` to complete before the specified…",null,[[["instant"],["t"]],["timeout"]]],[5,"throttle","","Slows down a stream by enforcing a delay between items.…",null,[[["t"],["duration"]],["throttle"]]],[0,"delay_queue","","A queue of delayed elements.",null,null],[3,"DelayQueue","tokio::time::delay_queue","A queue of delayed elements.",null,null],[3,"Expired","","An entry in `DelayQueue` that has expired and removed.",null,null],[3,"Key","","Token to a value stored in a `DelayQueue`.",null,null],[11,"new","","Creates a new, empty, `DelayQueue`",80,[[],["delayqueue"]]],[11,"with_capacity","","Creates a new, empty, `DelayQueue` with the specified…",80,[[["usize"]],["delayqueue"]]],[11,"insert_at","","Inserts `value` into the queue set to expire at a specific…",80,[[["instant"],["self"],["t"]],["key"]]],[11,"poll_expired","","Attempts to pull out the next value of the delay queue,…",80,[[["self"],["context"]],[["option",["result"]],["poll",["option"]]]]],[11,"insert","","Inserts `value` into the queue set to expire after the…",80,[[["self"],["t"],["duration"]],["key"]]],[11,"remove","","Removes the item associated with `key` from the queue.",80,[[["self"],["key"]],["expired"]]],[11,"reset_at","","Sets the delay of the item associated with `key` to expire…",80,[[["instant"],["self"],["key"]]]],[11,"reset","","Sets the delay of the item associated with `key` to expire…",80,[[["duration"],["self"],["key"]]]],[11,"clear","","Clears the queue, removing all items.",80,[[["self"]]]],[11,"capacity","","Returns the number of elements the queue can hold without…",80,[[["self"]],["usize"]]],[11,"len","","Returns the number of elements currently in the queue.",80,[[["self"]],["usize"]]],[11,"reserve","","Reserves capacity for at least `additional` more items to…",80,[[["self"],["usize"]]]],[11,"is_empty","","Returns `true` if there are no items in the queue.",80,[[["self"]],["bool"]]],[11,"get_ref","","Returns a reference to the inner value.",81,[[["self"]],["t"]]],[11,"get_mut","","Returns a mutable reference to the inner value.",81,[[["self"]],["t"]]],[11,"into_inner","","Consumes `self` and returns the inner value.",81,[[],["t"]]],[11,"deadline","","Returns the deadline that the expiration was set to.",81,[[["self"]],["instant"]]],[11,"deadline","tokio::time","Returns the instant at which the future will complete.",82,[[["self"]],["instant"]]],[11,"is_elapsed","","Returns `true` if the `Delay` has elapsed",82,[[["self"]],["bool"]]],[11,"reset","","Resets the `Delay` instance to a new deadline.",82,[[["instant"],["self"]]]],[11,"shutdown","","Creates an error representing a shutdown timer.",83,[[],["error"]]],[11,"is_shutdown","","Returns `true` if the error was caused by the timer being…",83,[[["self"]],["bool"]]],[11,"at_capacity","","Creates an error representing a timer at capacity.",83,[[],["error"]]],[11,"is_at_capacity","","Returns `true` if the error was caused by the timer being…",83,[[["self"]],["bool"]]],[11,"now","","Returns an instant corresponding to \"now\".",84,[[],["instant"]]],[11,"from_std","","Create a `tokio::time::Instant` from a `std::time::Instant`.",84,[[["instant"]],["instant"]]],[11,"into_std","","Convert the value into a `std::time::Instant`.",84,[[],["instant"]]],[11,"duration_since","","Returns the amount of time elapsed from another instant to…",84,[[["instant"],["self"]],["duration"]]],[11,"checked_duration_since","","Returns the amount of time elapsed from another instant to…",84,[[["instant"],["self"]],[["option",["duration"]],["duration"]]]],[11,"saturating_duration_since","","Returns the amount of time elapsed from another instant to…",84,[[["instant"],["self"]],["duration"]]],[11,"elapsed","","Returns the amount of time elapsed since this instant was…",84,[[["self"]],["duration"]]],[11,"checked_add","","Returns `Some(t)` where `t` is the time `self + duration`…",84,[[["self"],["duration"]],[["instant"],["option",["instant"]]]]],[11,"checked_sub","","Returns `Some(t)` where `t` is the time `self - duration`…",84,[[["self"],["duration"]],[["instant"],["option",["instant"]]]]],[11,"tick","","Completes when the next instant in the interval has been…",85,[[["self"]]]],[11,"get_ref","","Gets a reference to the underlying value in this timeout.",86,[[["self"]],["t"]]],[11,"get_mut","","Gets a mutable reference to the underlying value in this…",86,[[["self"]],["t"]]],[11,"into_inner","","Consumes this timeout, returning the underlying value.",86,[[],["t"]]],[11,"get_ref","","Acquires a reference to the underlying stream that this…",87,[[["self"]],["t"]]],[11,"get_mut","","Acquires a mutable reference to the underlying stream that…",87,[[["self"]],["t"]]],[11,"into_inner","","Consumes this combinator, returning the underlying stream.",87,[[],["t"]]],[14,"pin","tokio","Pins a value on the stack.",null,null],[14,"select","","Wait on multiple concurrent branches, returning when the…",null,null],[14,"join","","Wait on multiple concurrent branches, returning when all…",null,null],[14,"try_join","","Wait on multiple concurrent branches, returning when all…",null,null],[14,"task_local","","Declares a new task-local key of type…",null,null],[11,"from","tokio::fs","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"try_poll_next","","",5,[[["pin"],["s"],["context"]],[["poll",["option"]],["option",["result"]]]]],[11,"from","tokio::io","",88,[[["t"]],["t"]]],[11,"into","","",88,[[],["u"]]],[11,"to_string","","",88,[[["self"]],["string"]]],[11,"try_from","","",88,[[["u"]],["result"]]],[11,"try_into","","",88,[[],["result"]]],[11,"borrow","","",88,[[["self"]],["t"]]],[11,"borrow_mut","","",88,[[["self"]],["t"]]],[11,"type_id","","",88,[[["self"]],["typeid"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","","",89,[[["t"]],["t"]]],[11,"into","","",89,[[],["u"]]],[11,"try_from","","",89,[[["u"]],["result"]]],[11,"try_into","","",89,[[],["result"]]],[11,"borrow","","",89,[[["self"]],["t"]]],[11,"borrow_mut","","",89,[[["self"]],["t"]]],[11,"type_id","","",89,[[["self"]],["typeid"]]],[11,"from","","",90,[[["t"]],["t"]]],[11,"into","","",90,[[],["u"]]],[11,"try_from","","",90,[[["u"]],["result"]]],[11,"try_into","","",90,[[],["result"]]],[11,"borrow","","",90,[[["self"]],["t"]]],[11,"borrow_mut","","",90,[[["self"]],["t"]]],[11,"type_id","","",90,[[["self"]],["typeid"]]],[11,"from","","",91,[[["t"]],["t"]]],[11,"into","","",91,[[],["u"]]],[11,"try_from","","",91,[[["u"]],["result"]]],[11,"try_into","","",91,[[],["result"]]],[11,"borrow","","",91,[[["self"]],["t"]]],[11,"borrow_mut","","",91,[[["self"]],["t"]]],[11,"type_id","","",91,[[["self"]],["typeid"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","","",92,[[["t"]],["t"]]],[11,"into","","",92,[[],["u"]]],[11,"try_from","","",92,[[["u"]],["result"]]],[11,"try_into","","",92,[[],["result"]]],[11,"borrow","","",92,[[["self"]],["t"]]],[11,"borrow_mut","","",92,[[["self"]],["t"]]],[11,"type_id","","",92,[[["self"]],["typeid"]]],[11,"try_poll","","",92,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"into","","",14,[[],["u"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"try_into","","",14,[[],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"type_id","","",14,[[["self"]],["typeid"]]],[11,"from","","",93,[[["t"]],["t"]]],[11,"into","","",93,[[],["u"]]],[11,"try_from","","",93,[[["u"]],["result"]]],[11,"try_into","","",93,[[],["result"]]],[11,"borrow","","",93,[[["self"]],["t"]]],[11,"borrow_mut","","",93,[[["self"]],["t"]]],[11,"type_id","","",93,[[["self"]],["typeid"]]],[11,"try_poll","","",93,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",94,[[["t"]],["t"]]],[11,"into","","",94,[[],["u"]]],[11,"try_from","","",94,[[["u"]],["result"]]],[11,"try_into","","",94,[[],["result"]]],[11,"borrow","","",94,[[["self"]],["t"]]],[11,"borrow_mut","","",94,[[["self"]],["t"]]],[11,"type_id","","",94,[[["self"]],["typeid"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"into","","",15,[[],["u"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"try_into","","",15,[[],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"type_id","","",15,[[["self"]],["typeid"]]],[11,"try_poll_next","","",15,[[["pin"],["s"],["context"]],[["poll",["option"]],["option",["result"]]]]],[11,"from","","",95,[[["t"]],["t"]]],[11,"into","","",95,[[],["u"]]],[11,"try_from","","",95,[[["u"]],["result"]]],[11,"try_into","","",95,[[],["result"]]],[11,"borrow","","",95,[[["self"]],["t"]]],[11,"borrow_mut","","",95,[[["self"]],["t"]]],[11,"type_id","","",95,[[["self"]],["typeid"]]],[11,"from","","",96,[[["t"]],["t"]]],[11,"into","","",96,[[],["u"]]],[11,"try_from","","",96,[[["u"]],["result"]]],[11,"try_into","","",96,[[],["result"]]],[11,"borrow","","",96,[[["self"]],["t"]]],[11,"borrow_mut","","",96,[[["self"]],["t"]]],[11,"type_id","","",96,[[["self"]],["typeid"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"try_poll_next","","",16,[[["pin"],["s"],["context"]],[["poll",["option"]],["option",["result"]]]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",97,[[["t"]],["t"]]],[11,"into","","",97,[[],["u"]]],[11,"try_from","","",97,[[["u"]],["result"]]],[11,"try_into","","",97,[[],["result"]]],[11,"borrow","","",97,[[["self"]],["t"]]],[11,"borrow_mut","","",97,[[["self"]],["t"]]],[11,"type_id","","",97,[[["self"]],["typeid"]]],[11,"from","tokio::net","",27,[[["t"]],["t"]]],[11,"into","","",27,[[],["u"]]],[11,"try_from","","",27,[[["u"]],["result"]]],[11,"try_into","","",27,[[],["result"]]],[11,"borrow","","",27,[[["self"]],["t"]]],[11,"borrow_mut","","",27,[[["self"]],["t"]]],[11,"type_id","","",27,[[["self"]],["typeid"]]],[11,"try_poll_next","","",27,[[["pin"],["s"],["context"]],[["poll",["option"]],["option",["result"]]]]],[11,"from","","",32,[[["t"]],["t"]]],[11,"into","","",32,[[],["u"]]],[11,"try_from","","",32,[[["u"]],["result"]]],[11,"try_into","","",32,[[],["result"]]],[11,"borrow","","",32,[[["self"]],["t"]]],[11,"borrow_mut","","",32,[[["self"]],["t"]]],[11,"type_id","","",32,[[["self"]],["typeid"]]],[11,"from","","",34,[[["t"]],["t"]]],[11,"into","","",34,[[],["u"]]],[11,"try_from","","",34,[[["u"]],["result"]]],[11,"try_into","","",34,[[],["result"]]],[11,"borrow","","",34,[[["self"]],["t"]]],[11,"borrow_mut","","",34,[[["self"]],["t"]]],[11,"type_id","","",34,[[["self"]],["typeid"]]],[11,"from","","",38,[[["t"]],["t"]]],[11,"into","","",38,[[],["u"]]],[11,"try_from","","",38,[[["u"]],["result"]]],[11,"try_into","","",38,[[],["result"]]],[11,"borrow","","",38,[[["self"]],["t"]]],[11,"borrow_mut","","",38,[[["self"]],["t"]]],[11,"type_id","","",38,[[["self"]],["typeid"]]],[11,"from","","",40,[[["t"]],["t"]]],[11,"into","","",40,[[],["u"]]],[11,"try_from","","",40,[[["u"]],["result"]]],[11,"try_into","","",40,[[],["result"]]],[11,"borrow","","",40,[[["self"]],["t"]]],[11,"borrow_mut","","",40,[[["self"]],["t"]]],[11,"type_id","","",40,[[["self"]],["typeid"]]],[11,"try_poll_next","","",40,[[["pin"],["s"],["context"]],[["poll",["option"]],["option",["result"]]]]],[11,"from","","",41,[[["t"]],["t"]]],[11,"into","","",41,[[],["u"]]],[11,"try_from","","",41,[[["u"]],["result"]]],[11,"try_into","","",41,[[],["result"]]],[11,"borrow","","",41,[[["self"]],["t"]]],[11,"borrow_mut","","",41,[[["self"]],["t"]]],[11,"type_id","","",41,[[["self"]],["typeid"]]],[11,"from","tokio::net::tcp","",28,[[["t"]],["t"]]],[11,"into","","",28,[[],["u"]]],[11,"try_from","","",28,[[["u"]],["result"]]],[11,"try_into","","",28,[[],["result"]]],[11,"borrow","","",28,[[["self"]],["t"]]],[11,"borrow_mut","","",28,[[["self"]],["t"]]],[11,"type_id","","",28,[[["self"]],["typeid"]]],[11,"try_poll_next","","",28,[[["pin"],["s"],["context"]],[["poll",["option"]],["option",["result"]]]]],[11,"from","","",29,[[["t"]],["t"]]],[11,"into","","",29,[[],["u"]]],[11,"try_from","","",29,[[["u"]],["result"]]],[11,"try_into","","",29,[[],["result"]]],[11,"borrow","","",29,[[["self"]],["t"]]],[11,"borrow_mut","","",29,[[["self"]],["t"]]],[11,"type_id","","",29,[[["self"]],["typeid"]]],[11,"from","","",98,[[["t"]],["t"]]],[11,"into","","",98,[[],["u"]]],[11,"try_from","","",98,[[["u"]],["result"]]],[11,"try_into","","",98,[[],["result"]]],[11,"borrow","","",98,[[["self"]],["t"]]],[11,"borrow_mut","","",98,[[["self"]],["t"]]],[11,"type_id","","",98,[[["self"]],["typeid"]]],[11,"from","","",30,[[["t"]],["t"]]],[11,"into","","",30,[[],["u"]]],[11,"try_from","","",30,[[["u"]],["result"]]],[11,"try_into","","",30,[[],["result"]]],[11,"borrow","","",30,[[["self"]],["t"]]],[11,"borrow_mut","","",30,[[["self"]],["t"]]],[11,"type_id","","",30,[[["self"]],["typeid"]]],[11,"from","","",31,[[["t"]],["t"]]],[11,"into","","",31,[[],["u"]]],[11,"try_from","","",31,[[["u"]],["result"]]],[11,"try_into","","",31,[[],["result"]]],[11,"borrow","","",31,[[["self"]],["t"]]],[11,"borrow_mut","","",31,[[["self"]],["t"]]],[11,"type_id","","",31,[[["self"]],["typeid"]]],[11,"from","","",26,[[["t"]],["t"]]],[11,"into","","",26,[[],["u"]]],[11,"to_string","","",26,[[["self"]],["string"]]],[11,"try_from","","",26,[[["u"]],["result"]]],[11,"try_into","","",26,[[],["result"]]],[11,"borrow","","",26,[[["self"]],["t"]]],[11,"borrow_mut","","",26,[[["self"]],["t"]]],[11,"type_id","","",26,[[["self"]],["typeid"]]],[11,"from","tokio::net::udp","",35,[[["t"]],["t"]]],[11,"into","","",35,[[],["u"]]],[11,"try_from","","",35,[[["u"]],["result"]]],[11,"try_into","","",35,[[],["result"]]],[11,"borrow","","",35,[[["self"]],["t"]]],[11,"borrow_mut","","",35,[[["self"]],["t"]]],[11,"type_id","","",35,[[["self"]],["typeid"]]],[11,"from","","",33,[[["t"]],["t"]]],[11,"into","","",33,[[],["u"]]],[11,"to_string","","",33,[[["self"]],["string"]]],[11,"try_from","","",33,[[["u"]],["result"]]],[11,"try_into","","",33,[[],["result"]]],[11,"borrow","","",33,[[["self"]],["t"]]],[11,"borrow_mut","","",33,[[["self"]],["t"]]],[11,"type_id","","",33,[[["self"]],["typeid"]]],[11,"from","","",36,[[["t"]],["t"]]],[11,"into","","",36,[[],["u"]]],[11,"try_from","","",36,[[["u"]],["result"]]],[11,"try_into","","",36,[[],["result"]]],[11,"borrow","","",36,[[["self"]],["t"]]],[11,"borrow_mut","","",36,[[["self"]],["t"]]],[11,"type_id","","",36,[[["self"]],["typeid"]]],[11,"from","tokio::net::unix","",39,[[["t"]],["t"]]],[11,"into","","",39,[[],["u"]]],[11,"try_from","","",39,[[["u"]],["result"]]],[11,"try_into","","",39,[[],["result"]]],[11,"borrow","","",39,[[["self"]],["t"]]],[11,"borrow_mut","","",39,[[["self"]],["t"]]],[11,"type_id","","",39,[[["self"]],["typeid"]]],[11,"try_poll_next","","",39,[[["pin"],["s"],["context"]],[["poll",["option"]],["option",["result"]]]]],[11,"from","","",99,[[["t"]],["t"]]],[11,"into","","",99,[[],["u"]]],[11,"try_from","","",99,[[["u"]],["result"]]],[11,"try_into","","",99,[[],["result"]]],[11,"borrow","","",99,[[["self"]],["t"]]],[11,"borrow_mut","","",99,[[["self"]],["t"]]],[11,"type_id","","",99,[[["self"]],["typeid"]]],[11,"from","","",100,[[["t"]],["t"]]],[11,"into","","",100,[[],["u"]]],[11,"try_from","","",100,[[["u"]],["result"]]],[11,"try_into","","",100,[[],["result"]]],[11,"borrow","","",100,[[["self"]],["t"]]],[11,"borrow_mut","","",100,[[["self"]],["t"]]],[11,"type_id","","",100,[[["self"]],["typeid"]]],[11,"from","","",37,[[["t"]],["t"]]],[11,"into","","",37,[[],["u"]]],[11,"to_owned","","",37,[[["self"]],["t"]]],[11,"clone_into","","",37,[[["self"],["t"]]]],[11,"try_from","","",37,[[["u"]],["result"]]],[11,"try_into","","",37,[[],["result"]]],[11,"borrow","","",37,[[["self"]],["t"]]],[11,"borrow_mut","","",37,[[["self"]],["t"]]],[11,"type_id","","",37,[[["self"]],["typeid"]]],[11,"from","tokio::process","",43,[[["t"]],["t"]]],[11,"into","","",43,[[],["u"]]],[11,"try_from","","",43,[[["u"]],["result"]]],[11,"try_into","","",43,[[],["result"]]],[11,"borrow","","",43,[[["self"]],["t"]]],[11,"borrow_mut","","",43,[[["self"]],["t"]]],[11,"type_id","","",43,[[["self"]],["typeid"]]],[11,"from","","",42,[[["t"]],["t"]]],[11,"into","","",42,[[],["u"]]],[11,"try_from","","",42,[[["u"]],["result"]]],[11,"try_into","","",42,[[],["result"]]],[11,"borrow","","",42,[[["self"]],["t"]]],[11,"borrow_mut","","",42,[[["self"]],["t"]]],[11,"type_id","","",42,[[["self"]],["typeid"]]],[11,"try_poll","","",42,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",101,[[["t"]],["t"]]],[11,"into","","",101,[[],["u"]]],[11,"try_from","","",101,[[["u"]],["result"]]],[11,"try_into","","",101,[[],["result"]]],[11,"borrow","","",101,[[["self"]],["t"]]],[11,"borrow_mut","","",101,[[["self"]],["t"]]],[11,"type_id","","",101,[[["self"]],["typeid"]]],[11,"from","","",102,[[["t"]],["t"]]],[11,"into","","",102,[[],["u"]]],[11,"try_from","","",102,[[["u"]],["result"]]],[11,"try_into","","",102,[[],["result"]]],[11,"borrow","","",102,[[["self"]],["t"]]],[11,"borrow_mut","","",102,[[["self"]],["t"]]],[11,"type_id","","",102,[[["self"]],["typeid"]]],[11,"from","","",103,[[["t"]],["t"]]],[11,"into","","",103,[[],["u"]]],[11,"try_from","","",103,[[["u"]],["result"]]],[11,"try_into","","",103,[[],["result"]]],[11,"borrow","","",103,[[["self"]],["t"]]],[11,"borrow_mut","","",103,[[["self"]],["t"]]],[11,"type_id","","",103,[[["self"]],["typeid"]]],[11,"from","tokio::runtime","",44,[[["t"]],["t"]]],[11,"into","","",44,[[],["u"]]],[11,"try_from","","",44,[[["u"]],["result"]]],[11,"try_into","","",44,[[],["result"]]],[11,"borrow","","",44,[[["self"]],["t"]]],[11,"borrow_mut","","",44,[[["self"]],["t"]]],[11,"type_id","","",44,[[["self"]],["typeid"]]],[11,"from","","",45,[[["t"]],["t"]]],[11,"into","","",45,[[],["u"]]],[11,"to_owned","","",45,[[["self"]],["t"]]],[11,"clone_into","","",45,[[["self"],["t"]]]],[11,"try_from","","",45,[[["u"]],["result"]]],[11,"try_into","","",45,[[],["result"]]],[11,"borrow","","",45,[[["self"]],["t"]]],[11,"borrow_mut","","",45,[[["self"]],["t"]]],[11,"type_id","","",45,[[["self"]],["typeid"]]],[11,"from","","",104,[[["t"]],["t"]]],[11,"into","","",104,[[],["u"]]],[11,"to_string","","",104,[[["self"]],["string"]]],[11,"try_from","","",104,[[["u"]],["result"]]],[11,"try_into","","",104,[[],["result"]]],[11,"borrow","","",104,[[["self"]],["t"]]],[11,"borrow_mut","","",104,[[["self"]],["t"]]],[11,"type_id","","",104,[[["self"]],["typeid"]]],[11,"from","","",46,[[["t"]],["t"]]],[11,"into","","",46,[[],["u"]]],[11,"try_from","","",46,[[["u"]],["result"]]],[11,"try_into","","",46,[[],["result"]]],[11,"borrow","","",46,[[["self"]],["t"]]],[11,"borrow_mut","","",46,[[["self"]],["t"]]],[11,"type_id","","",46,[[["self"]],["typeid"]]],[11,"from","tokio::task","",105,[[["t"]],["t"]]],[11,"into","","",105,[[],["u"]]],[11,"to_string","","",105,[[["self"]],["string"]]],[11,"try_from","","",105,[[["u"]],["result"]]],[11,"try_into","","",105,[[],["result"]]],[11,"borrow","","",105,[[["self"]],["t"]]],[11,"borrow_mut","","",105,[[["self"]],["t"]]],[11,"type_id","","",105,[[["self"]],["typeid"]]],[11,"from","","",106,[[["t"]],["t"]]],[11,"into","","",106,[[],["u"]]],[11,"try_from","","",106,[[["u"]],["result"]]],[11,"try_into","","",106,[[],["result"]]],[11,"borrow","","",106,[[["self"]],["t"]]],[11,"borrow_mut","","",106,[[["self"]],["t"]]],[11,"type_id","","",106,[[["self"]],["typeid"]]],[11,"try_poll","","",106,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","tokio::signal::unix","",47,[[["t"]],["t"]]],[11,"into","","",47,[[],["u"]]],[11,"to_owned","","",47,[[["self"]],["t"]]],[11,"clone_into","","",47,[[["self"],["t"]]]],[11,"try_from","","",47,[[["u"]],["result"]]],[11,"try_into","","",47,[[],["result"]]],[11,"borrow","","",47,[[["self"]],["t"]]],[11,"borrow_mut","","",47,[[["self"]],["t"]]],[11,"type_id","","",47,[[["self"]],["typeid"]]],[11,"from","","",48,[[["t"]],["t"]]],[11,"into","","",48,[[],["u"]]],[11,"try_from","","",48,[[["u"]],["result"]]],[11,"try_into","","",48,[[],["result"]]],[11,"borrow","","",48,[[["self"]],["t"]]],[11,"borrow_mut","","",48,[[["self"]],["t"]]],[11,"type_id","","",48,[[["self"]],["typeid"]]],[11,"from","tokio::stream","",107,[[["t"]],["t"]]],[11,"into","","",107,[[],["u"]]],[11,"try_from","","",107,[[["u"]],["result"]]],[11,"try_into","","",107,[[],["result"]]],[11,"borrow","","",107,[[["self"]],["t"]]],[11,"borrow_mut","","",107,[[["self"]],["t"]]],[11,"type_id","","",107,[[["self"]],["typeid"]]],[11,"try_poll_next","","",107,[[["pin"],["s"],["context"]],[["poll",["option"]],["option",["result"]]]]],[11,"from","","",108,[[["t"]],["t"]]],[11,"into","","",108,[[],["u"]]],[11,"try_from","","",108,[[["u"]],["result"]]],[11,"try_into","","",108,[[],["result"]]],[11,"borrow","","",108,[[["self"]],["t"]]],[11,"borrow_mut","","",108,[[["self"]],["t"]]],[11,"type_id","","",108,[[["self"]],["typeid"]]],[11,"try_poll_next","","",108,[[["pin"],["s"],["context"]],[["poll",["option"]],["option",["result"]]]]],[11,"from","","",109,[[["t"]],["t"]]],[11,"into","","",109,[[],["u"]]],[11,"try_from","","",109,[[["u"]],["result"]]],[11,"try_into","","",109,[[],["result"]]],[11,"borrow","","",109,[[["self"]],["t"]]],[11,"borrow_mut","","",109,[[["self"]],["t"]]],[11,"type_id","","",109,[[["self"]],["typeid"]]],[11,"try_poll_next","","",109,[[["pin"],["s"],["context"]],[["poll",["option"]],["option",["result"]]]]],[11,"from","","",110,[[["t"]],["t"]]],[11,"into","","",110,[[],["u"]]],[11,"try_from","","",110,[[["u"]],["result"]]],[11,"try_into","","",110,[[],["result"]]],[11,"borrow","","",110,[[["self"]],["t"]]],[11,"borrow_mut","","",110,[[["self"]],["t"]]],[11,"type_id","","",110,[[["self"]],["typeid"]]],[11,"try_poll_next","","",110,[[["pin"],["s"],["context"]],[["poll",["option"]],["option",["result"]]]]],[11,"from","","",50,[[["t"]],["t"]]],[11,"into","","",50,[[],["u"]]],[11,"try_from","","",50,[[["u"]],["result"]]],[11,"try_into","","",50,[[],["result"]]],[11,"borrow","","",50,[[["self"]],["t"]]],[11,"borrow_mut","","",50,[[["self"]],["t"]]],[11,"type_id","","",50,[[["self"]],["typeid"]]],[11,"from","tokio::sync","",52,[[["t"]],["t"]]],[11,"into","","",52,[[],["u"]]],[11,"try_from","","",52,[[["u"]],["result"]]],[11,"try_into","","",52,[[],["result"]]],[11,"borrow","","",52,[[["self"]],["t"]]],[11,"borrow_mut","","",52,[[["self"]],["t"]]],[11,"type_id","","",52,[[["self"]],["typeid"]]],[11,"from","","",53,[[["t"]],["t"]]],[11,"into","","",53,[[],["u"]]],[11,"to_owned","","",53,[[["self"]],["t"]]],[11,"clone_into","","",53,[[["self"],["t"]]]],[11,"try_from","","",53,[[["u"]],["result"]]],[11,"try_into","","",53,[[],["result"]]],[11,"borrow","","",53,[[["self"]],["t"]]],[11,"borrow_mut","","",53,[[["self"]],["t"]]],[11,"type_id","","",53,[[["self"]],["typeid"]]],[11,"from","","",67,[[],["t"]]],[11,"from","","",67,[[["t"]],["t"]]],[11,"into","","",67,[[],["u"]]],[11,"try_from","","",67,[[["u"]],["result"]]],[11,"try_into","","",67,[[],["result"]]],[11,"borrow","","",67,[[["self"]],["t"]]],[11,"borrow_mut","","",67,[[["self"]],["t"]]],[11,"type_id","","",67,[[["self"]],["typeid"]]],[11,"from","","",111,[[["t"]],["t"]]],[11,"into","","",111,[[],["u"]]],[11,"to_string","","",111,[[["self"]],["string"]]],[11,"try_from","","",111,[[["u"]],["result"]]],[11,"try_into","","",111,[[],["result"]]],[11,"borrow","","",111,[[["self"]],["t"]]],[11,"borrow_mut","","",111,[[["self"]],["t"]]],[11,"type_id","","",111,[[["self"]],["typeid"]]],[11,"load","","",111,[[["self"]]]],[11,"load","","",111,[[["self"]],["dynguard"]]],[11,"from","","",112,[[["t"]],["t"]]],[11,"into","","",112,[[],["u"]]],[11,"to_string","","",112,[[["self"]],["string"]]],[11,"try_from","","",112,[[["u"]],["result"]]],[11,"try_into","","",112,[[],["result"]]],[11,"borrow","","",112,[[["self"]],["t"]]],[11,"borrow_mut","","",112,[[["self"]],["t"]]],[11,"type_id","","",112,[[["self"]],["typeid"]]],[11,"from","","",113,[[["t"]],["t"]]],[11,"into","","",113,[[],["u"]]],[11,"to_string","","",113,[[["self"]],["string"]]],[11,"try_from","","",113,[[["u"]],["result"]]],[11,"try_into","","",113,[[],["result"]]],[11,"borrow","","",113,[[["self"]],["t"]]],[11,"borrow_mut","","",113,[[["self"]],["t"]]],[11,"type_id","","",113,[[["self"]],["typeid"]]],[11,"load","","",113,[[["self"]]]],[11,"load","","",113,[[["self"]],["dynguard"]]],[11,"from","","",68,[[["t"]],["t"]]],[11,"into","","",68,[[],["u"]]],[11,"try_from","","",68,[[["u"]],["result"]]],[11,"try_into","","",68,[[],["result"]]],[11,"borrow","","",68,[[["self"]],["t"]]],[11,"borrow_mut","","",68,[[["self"]],["t"]]],[11,"type_id","","",68,[[["self"]],["typeid"]]],[11,"from","","",72,[[["t"]],["t"]]],[11,"into","","",72,[[],["u"]]],[11,"try_from","","",72,[[["u"]],["result"]]],[11,"try_into","","",72,[[],["result"]]],[11,"borrow","","",72,[[["self"]],["t"]]],[11,"borrow_mut","","",72,[[["self"]],["t"]]],[11,"type_id","","",72,[[["self"]],["typeid"]]],[11,"from","","",73,[[["t"]],["t"]]],[11,"into","","",73,[[],["u"]]],[11,"try_from","","",73,[[["u"]],["result"]]],[11,"try_into","","",73,[[],["result"]]],[11,"borrow","","",73,[[["self"]],["t"]]],[11,"borrow_mut","","",73,[[["self"]],["t"]]],[11,"type_id","","",73,[[["self"]],["typeid"]]],[11,"from","","",74,[[["t"]],["t"]]],[11,"into","","",74,[[],["u"]]],[11,"try_from","","",74,[[["u"]],["result"]]],[11,"try_into","","",74,[[],["result"]]],[11,"borrow","","",74,[[["self"]],["t"]]],[11,"borrow_mut","","",74,[[["self"]],["t"]]],[11,"type_id","","",74,[[["self"]],["typeid"]]],[11,"from","","",75,[[],["t"]]],[11,"from","","",75,[[["t"]],["t"]]],[11,"into","","",75,[[],["u"]]],[11,"try_from","","",75,[[["u"]],["result"]]],[11,"try_into","","",75,[[],["result"]]],[11,"borrow","","",75,[[["self"]],["t"]]],[11,"borrow_mut","","",75,[[["self"]],["t"]]],[11,"type_id","","",75,[[["self"]],["typeid"]]],[11,"from","","",114,[[["t"]],["t"]]],[11,"into","","",114,[[],["u"]]],[11,"try_from","","",114,[[["u"]],["result"]]],[11,"try_into","","",114,[[],["result"]]],[11,"borrow","","",114,[[["self"]],["t"]]],[11,"borrow_mut","","",114,[[["self"]],["t"]]],[11,"type_id","","",114,[[["self"]],["typeid"]]],[11,"load","","",114,[[["self"]]]],[11,"load","","",114,[[["self"]],["dynguard"]]],[11,"from","","",115,[[["t"]],["t"]]],[11,"into","","",115,[[],["u"]]],[11,"try_from","","",115,[[["u"]],["result"]]],[11,"try_into","","",115,[[],["result"]]],[11,"borrow","","",115,[[["self"]],["t"]]],[11,"borrow_mut","","",115,[[["self"]],["t"]]],[11,"type_id","","",115,[[["self"]],["typeid"]]],[11,"load","","",115,[[["self"]]]],[11,"load","","",115,[[["self"]],["dynguard"]]],[11,"from","tokio::sync::broadcast","",57,[[["t"]],["t"]]],[11,"into","","",57,[[],["u"]]],[11,"to_owned","","",57,[[["self"]],["t"]]],[11,"clone_into","","",57,[[["self"],["t"]]]],[11,"try_from","","",57,[[["u"]],["result"]]],[11,"try_into","","",57,[[],["result"]]],[11,"borrow","","",57,[[["self"]],["t"]]],[11,"borrow_mut","","",57,[[["self"]],["t"]]],[11,"type_id","","",57,[[["self"]],["typeid"]]],[11,"from","","",58,[[["t"]],["t"]]],[11,"into","","",58,[[],["u"]]],[11,"try_from","","",58,[[["u"]],["result"]]],[11,"try_into","","",58,[[],["result"]]],[11,"borrow","","",58,[[["self"]],["t"]]],[11,"borrow_mut","","",58,[[["self"]],["t"]]],[11,"type_id","","",58,[[["self"]],["typeid"]]],[11,"try_poll_next","","",58,[[["pin"],["s"],["context"]],[["poll",["option"]],["option",["result"]]]]],[11,"from","","",54,[[["t"]],["t"]]],[11,"into","","",54,[[],["u"]]],[11,"try_from","","",54,[[["u"]],["result"]]],[11,"try_into","","",54,[[],["result"]]],[11,"borrow","","",54,[[["self"]],["t"]]],[11,"borrow_mut","","",54,[[["self"]],["t"]]],[11,"type_id","","",54,[[["self"]],["typeid"]]],[11,"from","","",55,[[["t"]],["t"]]],[11,"into","","",55,[[],["u"]]],[11,"to_string","","",55,[[["self"]],["string"]]],[11,"try_from","","",55,[[["u"]],["result"]]],[11,"try_into","","",55,[[],["result"]]],[11,"borrow","","",55,[[["self"]],["t"]]],[11,"borrow_mut","","",55,[[["self"]],["t"]]],[11,"type_id","","",55,[[["self"]],["typeid"]]],[11,"from","","",56,[[["t"]],["t"]]],[11,"into","","",56,[[],["u"]]],[11,"to_string","","",56,[[["self"]],["string"]]],[11,"try_from","","",56,[[["u"]],["result"]]],[11,"try_into","","",56,[[],["result"]]],[11,"borrow","","",56,[[["self"]],["t"]]],[11,"borrow_mut","","",56,[[["self"]],["t"]]],[11,"type_id","","",56,[[["self"]],["typeid"]]],[11,"from","tokio::sync::mpsc","",59,[[["t"]],["t"]]],[11,"into","","",59,[[],["u"]]],[11,"try_from","","",59,[[["u"]],["result"]]],[11,"try_into","","",59,[[],["result"]]],[11,"borrow","","",59,[[["self"]],["t"]]],[11,"borrow_mut","","",59,[[["self"]],["t"]]],[11,"type_id","","",59,[[["self"]],["typeid"]]],[11,"try_poll_next","","",59,[[["pin"],["s"],["context"]],[["poll",["option"]],["option",["result"]]]]],[11,"from","","",60,[[["t"]],["t"]]],[11,"into","","",60,[[],["u"]]],[11,"to_owned","","",60,[[["self"]],["t"]]],[11,"clone_into","","",60,[[["self"],["t"]]]],[11,"try_from","","",60,[[["u"]],["result"]]],[11,"try_into","","",60,[[],["result"]]],[11,"borrow","","",60,[[["self"]],["t"]]],[11,"borrow_mut","","",60,[[["self"]],["t"]]],[11,"type_id","","",60,[[["self"]],["typeid"]]],[11,"from","","",61,[[["t"]],["t"]]],[11,"into","","",61,[[],["u"]]],[11,"try_from","","",61,[[["u"]],["result"]]],[11,"try_into","","",61,[[],["result"]]],[11,"borrow","","",61,[[["self"]],["t"]]],[11,"borrow_mut","","",61,[[["self"]],["t"]]],[11,"type_id","","",61,[[["self"]],["typeid"]]],[11,"try_poll_next","","",61,[[["pin"],["s"],["context"]],[["poll",["option"]],["option",["result"]]]]],[11,"from","","",62,[[["t"]],["t"]]],[11,"into","","",62,[[],["u"]]],[11,"to_owned","","",62,[[["self"]],["t"]]],[11,"clone_into","","",62,[[["self"],["t"]]]],[11,"try_from","","",62,[[["u"]],["result"]]],[11,"try_into","","",62,[[],["result"]]],[11,"borrow","","",62,[[["self"]],["t"]]],[11,"borrow_mut","","",62,[[["self"]],["t"]]],[11,"type_id","","",62,[[["self"]],["typeid"]]],[11,"from","tokio::sync::mpsc::error","",63,[[["t"]],["t"]]],[11,"into","","",63,[[],["u"]]],[11,"to_string","","",63,[[["self"]],["string"]]],[11,"try_from","","",63,[[["u"]],["result"]]],[11,"try_into","","",63,[[],["result"]]],[11,"borrow","","",63,[[["self"]],["t"]]],[11,"borrow_mut","","",63,[[["self"]],["t"]]],[11,"type_id","","",63,[[["self"]],["typeid"]]],[11,"from","","",116,[[["t"]],["t"]]],[11,"into","","",116,[[],["u"]]],[11,"to_string","","",116,[[["self"]],["string"]]],[11,"try_from","","",116,[[["u"]],["result"]]],[11,"try_into","","",116,[[],["result"]]],[11,"borrow","","",116,[[["self"]],["t"]]],[11,"borrow_mut","","",116,[[["self"]],["t"]]],[11,"type_id","","",116,[[["self"]],["typeid"]]],[11,"from","","",117,[[["t"]],["t"]]],[11,"into","","",117,[[],["u"]]],[11,"to_string","","",117,[[["self"]],["string"]]],[11,"try_from","","",117,[[["u"]],["result"]]],[11,"try_into","","",117,[[],["result"]]],[11,"borrow","","",117,[[["self"]],["t"]]],[11,"borrow_mut","","",117,[[["self"]],["t"]]],[11,"type_id","","",117,[[["self"]],["typeid"]]],[11,"from","","",64,[[["t"]],["t"]]],[11,"into","","",64,[[],["u"]]],[11,"to_string","","",64,[[["self"]],["string"]]],[11,"try_from","","",64,[[["u"]],["result"]]],[11,"try_into","","",64,[[],["result"]]],[11,"borrow","","",64,[[["self"]],["t"]]],[11,"borrow_mut","","",64,[[["self"]],["t"]]],[11,"type_id","","",64,[[["self"]],["typeid"]]],[11,"from","","",65,[[["t"]],["t"]]],[11,"into","","",65,[[],["u"]]],[11,"to_string","","",65,[[["self"]],["string"]]],[11,"try_from","","",65,[[["u"]],["result"]]],[11,"try_into","","",65,[[],["result"]]],[11,"borrow","","",65,[[["self"]],["t"]]],[11,"borrow_mut","","",65,[[["self"]],["t"]]],[11,"type_id","","",65,[[["self"]],["typeid"]]],[11,"from","","",66,[[["t"]],["t"]]],[11,"into","","",66,[[],["u"]]],[11,"to_string","","",66,[[["self"]],["string"]]],[11,"try_from","","",66,[[["u"]],["result"]]],[11,"try_into","","",66,[[],["result"]]],[11,"borrow","","",66,[[["self"]],["t"]]],[11,"borrow_mut","","",66,[[["self"]],["t"]]],[11,"type_id","","",66,[[["self"]],["typeid"]]],[11,"from","tokio::sync::oneshot","",70,[[["t"]],["t"]]],[11,"into","","",70,[[],["u"]]],[11,"try_from","","",70,[[["u"]],["result"]]],[11,"try_into","","",70,[[],["result"]]],[11,"borrow","","",70,[[["self"]],["t"]]],[11,"borrow_mut","","",70,[[["self"]],["t"]]],[11,"type_id","","",70,[[["self"]],["typeid"]]],[11,"from","","",71,[[["t"]],["t"]]],[11,"into","","",71,[[],["u"]]],[11,"try_from","","",71,[[["u"]],["result"]]],[11,"try_into","","",71,[[],["result"]]],[11,"borrow","","",71,[[["self"]],["t"]]],[11,"borrow_mut","","",71,[[["self"]],["t"]]],[11,"type_id","","",71,[[["self"]],["typeid"]]],[11,"try_poll","","",71,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","tokio::sync::oneshot::error","",118,[[["t"]],["t"]]],[11,"into","","",118,[[],["u"]]],[11,"to_string","","",118,[[["self"]],["string"]]],[11,"try_from","","",118,[[["u"]],["result"]]],[11,"try_into","","",118,[[],["result"]]],[11,"borrow","","",118,[[["self"]],["t"]]],[11,"borrow_mut","","",118,[[["self"]],["t"]]],[11,"type_id","","",118,[[["self"]],["typeid"]]],[11,"from","","",69,[[["t"]],["t"]]],[11,"into","","",69,[[],["u"]]],[11,"to_string","","",69,[[["self"]],["string"]]],[11,"try_from","","",69,[[["u"]],["result"]]],[11,"try_into","","",69,[[],["result"]]],[11,"borrow","","",69,[[["self"]],["t"]]],[11,"borrow_mut","","",69,[[["self"]],["t"]]],[11,"type_id","","",69,[[["self"]],["typeid"]]],[11,"from","tokio::sync::watch","",76,[[["t"]],["t"]]],[11,"into","","",76,[[],["u"]]],[11,"to_owned","","",76,[[["self"]],["t"]]],[11,"clone_into","","",76,[[["self"],["t"]]]],[11,"try_from","","",76,[[["u"]],["result"]]],[11,"try_into","","",76,[[],["result"]]],[11,"borrow","","",76,[[["self"]],["t"]]],[11,"borrow_mut","","",76,[[["self"]],["t"]]],[11,"type_id","","",76,[[["self"]],["typeid"]]],[11,"try_poll_next","","",76,[[["pin"],["s"],["context"]],[["poll",["option"]],["option",["result"]]]]],[11,"from","","",77,[[["t"]],["t"]]],[11,"into","","",77,[[],["u"]]],[11,"try_from","","",77,[[["u"]],["result"]]],[11,"try_into","","",77,[[],["result"]]],[11,"borrow","","",77,[[["self"]],["t"]]],[11,"borrow_mut","","",77,[[["self"]],["t"]]],[11,"type_id","","",77,[[["self"]],["typeid"]]],[11,"from","","",119,[[["t"]],["t"]]],[11,"into","","",119,[[],["u"]]],[11,"try_from","","",119,[[["u"]],["result"]]],[11,"try_into","","",119,[[],["result"]]],[11,"borrow","","",119,[[["self"]],["t"]]],[11,"borrow_mut","","",119,[[["self"]],["t"]]],[11,"type_id","","",119,[[["self"]],["typeid"]]],[11,"load","","",119,[[["self"]]]],[11,"load","","",119,[[["self"]],["dynguard"]]],[11,"from","tokio::sync::watch::error","",120,[[["t"]],["t"]]],[11,"into","","",120,[[],["u"]]],[11,"to_string","","",120,[[["self"]],["string"]]],[11,"try_from","","",120,[[["u"]],["result"]]],[11,"try_into","","",120,[[],["result"]]],[11,"borrow","","",120,[[["self"]],["t"]]],[11,"borrow_mut","","",120,[[["self"]],["t"]]],[11,"type_id","","",120,[[["self"]],["typeid"]]],[11,"from","tokio::task","",78,[[["t"]],["t"]]],[11,"into","","",78,[[],["u"]]],[11,"try_from","","",78,[[["u"]],["result"]]],[11,"try_into","","",78,[[],["result"]]],[11,"borrow","","",78,[[["self"]],["t"]]],[11,"borrow_mut","","",78,[[["self"]],["t"]]],[11,"type_id","","",78,[[["self"]],["typeid"]]],[11,"from","","",79,[[["t"]],["t"]]],[11,"into","","",79,[[],["u"]]],[11,"try_from","","",79,[[["u"]],["result"]]],[11,"try_into","","",79,[[],["result"]]],[11,"borrow","","",79,[[["self"]],["t"]]],[11,"borrow_mut","","",79,[[["self"]],["t"]]],[11,"type_id","","",79,[[["self"]],["typeid"]]],[11,"from","tokio::time","",121,[[["t"]],["t"]]],[11,"into","","",121,[[],["u"]]],[11,"to_owned","","",121,[[["self"]],["t"]]],[11,"clone_into","","",121,[[["self"],["t"]]]],[11,"try_from","","",121,[[["u"]],["result"]]],[11,"try_into","","",121,[[],["result"]]],[11,"borrow","","",121,[[["self"]],["t"]]],[11,"borrow_mut","","",121,[[["self"]],["t"]]],[11,"type_id","","",121,[[["self"]],["typeid"]]],[11,"from","tokio::time::delay_queue","",80,[[["t"]],["t"]]],[11,"into","","",80,[[],["u"]]],[11,"try_from","","",80,[[["u"]],["result"]]],[11,"try_into","","",80,[[],["result"]]],[11,"borrow","","",80,[[["self"]],["t"]]],[11,"borrow_mut","","",80,[[["self"]],["t"]]],[11,"type_id","","",80,[[["self"]],["typeid"]]],[11,"try_poll_next","","",80,[[["pin"],["s"],["context"]],[["poll",["option"]],["option",["result"]]]]],[11,"from","tokio::time","",82,[[["t"]],["t"]]],[11,"into","","",82,[[],["u"]]],[11,"try_from","","",82,[[["u"]],["result"]]],[11,"try_into","","",82,[[],["result"]]],[11,"borrow","","",82,[[["self"]],["t"]]],[11,"borrow_mut","","",82,[[["self"]],["t"]]],[11,"type_id","","",82,[[["self"]],["typeid"]]],[11,"from","","",83,[[["t"]],["t"]]],[11,"into","","",83,[[],["u"]]],[11,"to_string","","",83,[[["self"]],["string"]]],[11,"try_from","","",83,[[["u"]],["result"]]],[11,"try_into","","",83,[[],["result"]]],[11,"borrow","","",83,[[["self"]],["t"]]],[11,"borrow_mut","","",83,[[["self"]],["t"]]],[11,"type_id","","",83,[[["self"]],["typeid"]]],[11,"from","","",84,[[["t"]],["t"]]],[11,"into","","",84,[[],["u"]]],[11,"to_owned","","",84,[[["self"]],["t"]]],[11,"clone_into","","",84,[[["self"],["t"]]]],[11,"try_from","","",84,[[["u"]],["result"]]],[11,"try_into","","",84,[[],["result"]]],[11,"borrow","","",84,[[["self"]],["t"]]],[11,"borrow_mut","","",84,[[["self"]],["t"]]],[11,"type_id","","",84,[[["self"]],["typeid"]]],[11,"from","","",85,[[["t"]],["t"]]],[11,"into","","",85,[[],["u"]]],[11,"try_from","","",85,[[["u"]],["result"]]],[11,"try_into","","",85,[[],["result"]]],[11,"borrow","","",85,[[["self"]],["t"]]],[11,"borrow_mut","","",85,[[["self"]],["t"]]],[11,"type_id","","",85,[[["self"]],["typeid"]]],[11,"from","","",122,[[["t"]],["t"]]],[11,"into","","",122,[[],["u"]]],[11,"to_string","","",122,[[["self"]],["string"]]],[11,"try_from","","",122,[[["u"]],["result"]]],[11,"try_into","","",122,[[],["result"]]],[11,"borrow","","",122,[[["self"]],["t"]]],[11,"borrow_mut","","",122,[[["self"]],["t"]]],[11,"type_id","","",122,[[["self"]],["typeid"]]],[11,"from","","",86,[[["t"]],["t"]]],[11,"into","","",86,[[],["u"]]],[11,"try_from","","",86,[[["u"]],["result"]]],[11,"try_into","","",86,[[],["result"]]],[11,"borrow","","",86,[[["self"]],["t"]]],[11,"borrow_mut","","",86,[[["self"]],["t"]]],[11,"type_id","","",86,[[["self"]],["typeid"]]],[11,"try_poll","","",86,[[["pin"],["f"],["context"]],["poll"]]],[11,"from","","",87,[[["t"]],["t"]]],[11,"into","","",87,[[],["u"]]],[11,"try_from","","",87,[[["u"]],["result"]]],[11,"try_into","","",87,[[],["result"]]],[11,"borrow","","",87,[[["self"]],["t"]]],[11,"borrow_mut","","",87,[[["self"]],["t"]]],[11,"type_id","","",87,[[["self"]],["typeid"]]],[11,"try_poll_next","","",87,[[["pin"],["s"],["context"]],[["poll",["option"]],["option",["result"]]]]],[11,"from","tokio::time::delay_queue","",81,[[["t"]],["t"]]],[11,"into","","",81,[[],["u"]]],[11,"try_from","","",81,[[["u"]],["result"]]],[11,"try_into","","",81,[[],["result"]]],[11,"borrow","","",81,[[["self"]],["t"]]],[11,"borrow_mut","","",81,[[["self"]],["t"]]],[11,"type_id","","",81,[[["self"]],["typeid"]]],[11,"from","","",123,[[["t"]],["t"]]],[11,"into","","",123,[[],["u"]]],[11,"to_owned","","",123,[[["self"]],["t"]]],[11,"clone_into","","",123,[[["self"],["t"]]]],[11,"try_from","","",123,[[["u"]],["result"]]],[11,"try_into","","",123,[[],["result"]]],[11,"borrow","","",123,[[["self"]],["t"]]],[11,"borrow_mut","","",123,[[["self"]],["t"]]],[11,"type_id","","",123,[[["self"]],["typeid"]]],[11,"from","tokio::io","Converts a [`NulError`] into a [`io::Error`].",88,[[["nulerror"]],["error"]]],[11,"from","","Converts an [`ErrorKind`] into an [`Error`].",88,[[["errorkind"]],["error"]]],[11,"from","","",88,[[["intoinnererror"]],["error"]]],[11,"clone","","",7,[[["self"]],["errorkind"]]],[11,"fmt","","",88,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",7,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",88,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"hash","","",7,[[["self"],["__h"]]]],[11,"description","","",88,[[["self"]],["str"]]],[11,"cause","","",88,[[["self"]],[["error"],["option",["error"]]]]],[11,"source","","",88,[[["self"]],[["error"],["option",["error"]]]]],[11,"partial_cmp","","",7,[[["self"],["errorkind"]],[["option",["ordering"]],["ordering"]]]],[11,"cmp","","",7,[[["self"],["errorkind"]],["ordering"]]],[11,"eq","","",7,[[["self"],["errorkind"]],["bool"]]],[11,"sum","tokio::time","",121,[[["i"]],["duration"]]],[11,"sum","","",121,[[["i"]],["duration"]]],[11,"sub_assign","","",121,[[["duration"],["self"]]]],[11,"clone","","",121,[[["self"]],["duration"]]],[11,"eq","","",121,[[["duration"],["self"]],["bool"]]],[11,"ne","","",121,[[["duration"],["self"]],["bool"]]],[11,"div","","",121,[[["u32"]],["duration"]]],[11,"fmt","","",121,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"cmp","","",121,[[["duration"],["self"]],["ordering"]]],[11,"mul","","",121,[[["u32"]],["duration"]]],[11,"mul_assign","","",121,[[["self"],["u32"]]]],[11,"sub","","",121,[[["duration"]],["duration"]]],[11,"hash","","",121,[[["self"],["__h"]]]],[11,"add","","",121,[[["duration"]],["duration"]]],[11,"default","","",121,[[],["duration"]]],[11,"div_assign","","",121,[[["self"],["u32"]]]],[11,"add_assign","","",121,[[["duration"],["self"]]]],[11,"partial_cmp","","",121,[[["duration"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",121,[[["duration"],["self"]],["bool"]]],[11,"le","","",121,[[["duration"],["self"]],["bool"]]],[11,"gt","","",121,[[["duration"],["self"]],["bool"]]],[11,"ge","","",121,[[["duration"],["self"]],["bool"]]],[11,"poll_fill_buf","tokio::io","",12,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"consume","","",12,[[["pin"],["self"],["usize"]]]],[11,"poll_fill_buf","","",13,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"consume","","",13,[[["pin"],["self"],["usize"]]]],[11,"poll_fill_buf","","",14,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"consume","","",14,[[["pin"],["self"],["usize"]]]],[11,"poll_fill_buf","","",94,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"consume","","",94,[[["pin"],["self"],["usize"]]]],[11,"poll_fill_buf","","",97,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"consume","","",97,[[["pin"],["self"],["usize"]]]],[11,"poll_fill_buf","","",17,[[["pin"],["self"],["context"]],[["poll",["result"]],["result"]]]],[11,"consume","","",17,[[["pin"],["self"],["usize"]]]],[11,"prepare_uninitialized_buffer","tokio::fs","",1,[[["self"]],["bool"]]],[11,"poll_read","","",1,[[["context"],["pin"],["self"]],[["result",["usize"]],["poll",["result"]]]]],[11,"poll_read","tokio::io","",8,[[["context"],["pin"],["self"]],[["result",["usize"]],["poll",["result"]]]]],[11,"prepare_uninitialized_buffer","","",90,[[["self"]],["bool"]]],[11,"poll_read","","",90,[[["context"],["pin"],["self"]],[["result",["usize"]],["poll",["result"]]]]],[11,"poll_read","","",10,[[["context"],["pin"],["self"]],[["result",["usize"]],["poll",["result"]]]]],[11,"poll_read_buf","","",10,[[["b"],["context"],["pin"],["self"]],[["result",["usize"]],["poll",["result"]]]]],[11,"poll_read","","",12,[[["context"],["pin"],["self"]],[["result",["usize"]],["poll",["result"]]]]],[11,"prepare_uninitialized_buffer","","",12,[[["self"]],["bool"]]],[11,"poll_read","","",13,[[["context"],["pin"],["self"]],[["result",["usize"]],["poll",["result"]]]]],[11,"prepare_uninitialized_buffer","","",13,[[["self"]],["bool"]]],[11,"poll_read","","",14,[[["context"],["pin"],["self"]],[["result",["usize"]],["poll",["result"]]]]],[11,"prepare_uninitialized_buffer","","",14,[[["self"]],["bool"]]],[11,"prepare_uninitialized_buffer","","",94,[[["self"]],["bool"]]],[11,"poll_read","","",94,[[["context"],["pin"],["self"]],[["result",["usize"]],["poll",["result"]]]]],[11,"prepare_uninitialized_buffer","","",95,[[["self"]],["bool"]]],[11,"poll_read","","",95,[[["context"],["pin"],["self"]],[["result",["usize"]],["poll",["result"]]]]],[11,"poll_read","","",97,[[["context"],["pin"],["self"]],[["result",["usize"]],["poll",["result"]]]]],[11,"poll_read_buf","","",97,[[["context"],["pin"],["self"],["bm"]],[["result",["usize"]],["poll",["result"]]]]],[11,"prepare_uninitialized_buffer","","",97,[[["self"]],["bool"]]],[11,"prepare_uninitialized_buffer","","",17,[[["self"]],["bool"]]],[11,"poll_read","","",17,[[["context"],["pin"],["self"]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"prepare_uninitialized_buffer","tokio::net::tcp","",29,[[["self"]],["bool"]]],[11,"poll_read","","",29,[[["context"],["pin"],["self"]],[["result",["usize"]],["poll",["result"]]]]],[11,"prepare_uninitialized_buffer","","",30,[[["self"]],["bool"]]],[11,"poll_read","","",30,[[["context"],["pin"],["self"]],[["result",["usize"]],["poll",["result"]]]]],[11,"prepare_uninitialized_buffer","tokio::net","",32,[[["self"]],["bool"]]],[11,"poll_read","","",32,[[["context"],["pin"],["self"]],[["result",["usize"]],["poll",["result"]]]]],[11,"prepare_uninitialized_buffer","tokio::net::unix","",99,[[["self"]],["bool"]]],[11,"poll_read","","",99,[[["context"],["pin"],["self"]],[["result",["usize"]],["poll",["result"]]]]],[11,"prepare_uninitialized_buffer","tokio::net","",41,[[["self"]],["bool"]]],[11,"poll_read","","",41,[[["context"],["pin"],["self"]],[["result",["usize"]],["poll",["result"]]]]],[11,"prepare_uninitialized_buffer","tokio::process","",102,[[["self"]],["bool"]]],[11,"poll_read","","",102,[[["context"],["pin"],["self"]],[["result",["usize"]],["poll",["result"]]]]],[11,"prepare_uninitialized_buffer","","",103,[[["self"]],["bool"]]],[11,"poll_read","","",103,[[["context"],["pin"],["self"]],[["result",["usize"]],["poll",["result"]]]]],[11,"start_seek","tokio::fs","",1,[[["seekfrom"],["context"],["pin"],["self"]],[["result"],["poll",["result"]]]]],[11,"poll_complete","","",1,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["u64"]]]]],[11,"poll_write","","",1,[[["context"],["pin"],["self"]],[["result",["usize"]],["poll",["result"]]]]],[11,"poll_flush","","",1,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["error"]]]]],[11,"poll_shutdown","","",1,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["error"]]]]],[11,"poll_write","tokio::io","",8,[[["context"],["pin"],["self"]],[["result",["usize"]],["poll",["result"]]]]],[11,"poll_flush","","",8,[[["pin"],["self"],["context"]],[["result"],["poll",["result"]]]]],[11,"poll_shutdown","","",8,[[["pin"],["self"],["context"]],[["result"],["poll",["result"]]]]],[11,"poll_write","","",89,[[["context"],["pin"],["self"]],[["result",["usize"]],["poll",["result"]]]]],[11,"poll_flush","","",89,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["error"]]]]],[11,"poll_shutdown","","",89,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["error"]]]]],[11,"poll_write","","",91,[[["context"],["pin"],["self"]],[["result",["usize"]],["poll",["result"]]]]],[11,"poll_flush","","",91,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["error"]]]]],[11,"poll_shutdown","","",91,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["error"]]]]],[11,"poll_write","","",11,[[["context"],["pin"],["self"]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_flush","","",11,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["error"]]]]],[11,"poll_shutdown","","",11,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["error"]]]]],[11,"poll_write_buf","","",11,[[["b"],["context"],["pin"],["self"]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_write","","",12,[[["context"],["pin"],["self"]],[["result",["usize"]],["poll",["result"]]]]],[11,"poll_flush","","",12,[[["pin"],["self"],["context"]],[["result"],["poll",["result"]]]]],[11,"poll_shutdown","","",12,[[["pin"],["self"],["context"]],[["result"],["poll",["result"]]]]],[11,"poll_write","","",13,[[["context"],["pin"],["self"]],[["result",["usize"]],["poll",["result"]]]]],[11,"poll_flush","","",13,[[["pin"],["self"],["context"]],[["result"],["poll",["result"]]]]],[11,"poll_shutdown","","",13,[[["pin"],["self"],["context"]],[["result"],["poll",["result"]]]]],[11,"poll_write","","",14,[[["context"],["pin"],["self"]],[["result",["usize"]],["poll",["result"]]]]],[11,"poll_flush","","",14,[[["pin"],["self"],["context"]],[["result"],["poll",["result"]]]]],[11,"poll_shutdown","","",14,[[["pin"],["self"],["context"]],[["result"],["poll",["result"]]]]],[11,"poll_write","","",96,[[["context"],["pin"],["self"]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"poll_flush","","",96,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["error"]]]]],[11,"poll_shutdown","","",96,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["error"]]]]],[11,"poll_write","tokio::net::tcp","",98,[[["context"],["pin"],["self"]],[["result",["usize"]],["poll",["result"]]]]],[11,"poll_write_buf","","",98,[[["b"],["context"],["pin"],["self"]],[["result",["usize"]],["poll",["result"]]]]],[11,"poll_flush","","",98,[[["pin"],["self"],["context"]],[["result"],["poll",["result"]]]]],[11,"poll_shutdown","","",98,[[["pin"],["self"],["context"]],[["result"],["poll",["result"]]]]],[11,"poll_write","","",31,[[["context"],["pin"],["self"]],[["result",["usize"]],["poll",["result"]]]]],[11,"poll_write_buf","","",31,[[["b"],["context"],["pin"],["self"]],[["result",["usize"]],["poll",["result"]]]]],[11,"poll_flush","","",31,[[["pin"],["self"],["context"]],[["result"],["poll",["result"]]]]],[11,"poll_shutdown","","",31,[[["pin"],["self"],["context"]],[["result"],["poll",["result"]]]]],[11,"poll_write","tokio::net","",32,[[["context"],["pin"],["self"]],[["result",["usize"]],["poll",["result"]]]]],[11,"poll_write_buf","","",32,[[["b"],["context"],["pin"],["self"]],[["result",["usize"]],["poll",["result"]]]]],[11,"poll_flush","","",32,[[["pin"],["self"],["context"]],[["result"],["poll",["result"]]]]],[11,"poll_shutdown","","",32,[[["pin"],["self"],["context"]],[["result"],["poll",["result"]]]]],[11,"poll_write","tokio::net::unix","",100,[[["context"],["pin"],["self"]],[["result",["usize"]],["poll",["result"]]]]],[11,"poll_flush","","",100,[[["pin"],["self"],["context"]],[["result"],["poll",["result"]]]]],[11,"poll_shutdown","","",100,[[["pin"],["self"],["context"]],[["result"],["poll",["result"]]]]],[11,"poll_write","tokio::net","",41,[[["context"],["pin"],["self"]],[["result",["usize"]],["poll",["result"]]]]],[11,"poll_flush","","",41,[[["pin"],["self"],["context"]],[["result"],["poll",["result"]]]]],[11,"poll_shutdown","","",41,[[["pin"],["self"],["context"]],[["result"],["poll",["result"]]]]],[11,"poll_write","tokio::process","",101,[[["context"],["pin"],["self"]],[["result",["usize"]],["poll",["result"]]]]],[11,"poll_flush","","",101,[[["pin"],["self"],["context"]],[["result"],["poll",["result"]]]]],[11,"poll_shutdown","","",101,[[["pin"],["self"],["context"]],[["result"],["poll",["result"]]]]],[11,"mode","tokio::fs","",2,[[["self"],["u32"]],["openoptions"]]],[11,"custom_flags","","",2,[[["self"],["i32"]],["openoptions"]]],[11,"mode","","",0,[[["self"],["u32"]],["self"]]],[11,"drop","tokio::io","",8,[[["self"]]]],[11,"drop","","",9,[[["self"]]]],[11,"drop","tokio::net::tcp","",31,[[["self"]]]],[11,"drop","tokio::task","",106,[[["self"]]]],[11,"drop","tokio::sync::broadcast","",57,[[["self"]]]],[11,"drop","","",58,[[["self"]]]],[11,"drop","tokio::sync","",111,[[["self"]]]],[11,"drop","","",113,[[["self"]]]],[11,"drop","tokio::sync::oneshot","",70,[[["self"]]]],[11,"drop","","",71,[[["self"]]]],[11,"drop","tokio::sync","",73,[[["self"]]]],[11,"drop","","",74,[[["self"]]]],[11,"drop","tokio::sync::watch","",76,[[["self"]]]],[11,"drop","","",77,[[["self"]]]],[11,"drop","tokio::task","",78,[[["self"]]]],[11,"as_ref","tokio::net::tcp","",29,[[["self"]],["tcpstream"]]],[11,"as_ref","","",98,[[["self"]],["tcpstream"]]],[11,"as_ref","","",30,[[["self"]],["tcpstream"]]],[11,"as_ref","","",31,[[["self"]],["tcpstream"]]],[11,"as_ref","tokio::net::udp","",36,[[["self"]],["udpsocket"]]],[11,"as_ref","","",35,[[["self"]],["udpsocket"]]],[11,"as_ref","tokio::net::unix","",99,[[["self"]],["unixstream"]]],[11,"as_ref","","",100,[[["self"]],["unixstream"]]],[11,"from","tokio::fs","",1,[[["file"]],["self"]]],[11,"from","","",2,[[["openoptions"]],["openoptions"]]],[11,"from","tokio::io","",13,[[["bufwriter"],["bufreader",["bufwriter"]]],["self"]]],[11,"from","","",13,[[["bufreader"],["bufwriter",["bufreader"]]],["self"]]],[11,"from","tokio::process","",43,[[["stdcommand"]],["command"]]],[11,"from","tokio::io","",88,[[["joinerror"]],["error"]]],[11,"from","tokio::sync::mpsc::error","",63,[[],["senderror"]]],[11,"from","","",64,[[],["trysenderror"]]],[11,"from","","",64,[[["senderror"]],["trysenderror"]]],[11,"from","tokio::sync","",67,[[["t"]],["self"]]],[11,"from","","",75,[[["t"]],["self"]]],[11,"from","tokio::time","",84,[[["instant"]],["instant"]]],[11,"from","tokio::io","",88,[[["elapsed"]],["error"]]],[11,"clone","tokio::fs","",2,[[["self"]],["openoptions"]]],[11,"clone","tokio::net::unix","",37,[[["self"]],["ucred"]]],[11,"clone","tokio::runtime","",45,[[["self"]],["handle"]]],[11,"clone","tokio::signal::unix","",47,[[["self"]],["signalkind"]]],[11,"clone","tokio::sync","",53,[[["self"]],["barrierwaitresult"]]],[11,"clone","tokio::sync::broadcast","",57,[[["self"]],["sender"]]],[11,"clone","tokio::sync::mpsc","",60,[[["self"]],["self"]]],[11,"clone","","",62,[[["self"]],["self"]]],[11,"clone","tokio::sync::watch","",76,[[["self"]],["self"]]],[11,"clone","tokio::time::delay_queue","",123,[[["self"]],["key"]]],[11,"clone","tokio::time","",84,[[["self"]],["instant"]]],[11,"default","tokio::fs","",0,[[],["dirbuilder"]]],[11,"default","","",2,[[],["self"]]],[11,"default","tokio::runtime","",44,[[],["self"]]],[11,"default","tokio::stream","",50,[[],["streammap"]]],[11,"default","tokio::sync","",67,[[],["self"]]],[11,"default","","",68,[[],["notify"]]],[11,"default","","",75,[[],["self"]]],[11,"default","tokio::task","",78,[[],["localset"]]],[11,"default","tokio::time::delay_queue","",80,[[],["delayqueue"]]],[11,"cmp","tokio::time","",84,[[["self"],["instant"]],["ordering"]]],[11,"eq","tokio::net::unix","",37,[[["self"],["ucred"]],["bool"]]],[11,"ne","","",37,[[["self"],["ucred"]],["bool"]]],[11,"eq","tokio::sync::broadcast","",55,[[["self"],["recverror"]],["bool"]]],[11,"ne","","",55,[[["self"],["recverror"]],["bool"]]],[11,"eq","","",56,[[["self"],["tryrecverror"]],["bool"]]],[11,"ne","","",56,[[["self"],["tryrecverror"]],["bool"]]],[11,"eq","tokio::sync::mpsc::error","",65,[[["self"],["tryrecverror"]],["bool"]]],[11,"eq","tokio::sync::oneshot::error","",118,[[["recverror"],["self"]],["bool"]]],[11,"ne","","",118,[[["recverror"],["self"]],["bool"]]],[11,"eq","","",69,[[["self"],["tryrecverror"]],["bool"]]],[11,"eq","tokio::time","",84,[[["self"],["instant"]],["bool"]]],[11,"ne","","",84,[[["self"],["instant"]],["bool"]]],[11,"eq","","",122,[[["self"],["elapsed"]],["bool"]]],[11,"ne","","",122,[[["self"],["elapsed"]],["bool"]]],[11,"partial_cmp","","",84,[[["self"],["instant"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",84,[[["self"],["instant"]],["bool"]]],[11,"le","","",84,[[["self"],["instant"]],["bool"]]],[11,"gt","","",84,[[["self"],["instant"]],["bool"]]],[11,"ge","","",84,[[["self"],["instant"]],["bool"]]],[11,"deref","tokio::sync","",111,[[["self"]]]],[11,"deref","","",113,[[["self"]]]],[11,"deref","","",114,[[["self"]],["t"]]],[11,"deref","","",115,[[["self"]],["t"]]],[11,"deref","tokio::sync::watch","",119,[[["self"]],["t"]]],[11,"deref_mut","tokio::sync","",111,[[["self"]]]],[11,"deref_mut","","",113,[[["self"]]]],[11,"deref_mut","","",115,[[["self"]],["t"]]],[11,"fmt","tokio::fs","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio::io","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",89,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",90,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",91,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",92,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",13,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",14,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",93,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",94,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",15,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",95,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",96,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",97,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio::net","",27,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio::net::tcp","",28,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",29,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",98,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",30,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",31,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",26,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio::net","",32,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",34,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio::net::udp","",36,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",35,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",33,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio::net","",38,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio::net::unix","",39,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio::net","",40,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio::net::unix","",99,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",100,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio::net","",41,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio::net::unix","",37,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio::process","",43,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",42,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",101,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",102,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",103,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio::task","",105,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",106,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio::runtime","",44,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",45,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",104,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",46,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio::signal::unix","",47,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",48,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio::stream","",107,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",108,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",109,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",110,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",50,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio::sync","",52,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",53,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio::sync::broadcast","",54,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",55,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",56,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",57,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",58,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio::sync::mpsc","",60,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",59,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",62,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",61,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio::sync::mpsc::error","",63,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",64,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",116,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",65,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",117,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",66,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio::sync","",67,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",112,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",111,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",113,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",68,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio::sync::oneshot","",70,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",71,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio::sync::oneshot::error","",118,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",69,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio::sync","",72,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",73,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",74,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",75,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",114,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",115,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio::sync::watch","",76,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",77,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",119,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio::sync::watch::error","",120,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio::task","",78,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",79,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio::time::delay_queue","",80,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",81,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",123,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio::time","",82,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",83,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",84,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",85,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",86,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",122,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",87,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio::net::tcp","",26,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio::net::udp","",33,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio::task","",105,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio::runtime","",104,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio::sync::broadcast","",55,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",56,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio::sync::mpsc::error","",63,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",64,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",116,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",65,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",117,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",66,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio::sync","",112,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",111,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",113,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio::sync::oneshot::error","",118,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",69,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio::sync::watch::error","",120,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio::time","",83,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",122,[[["formatter"],["self"]],["result"]]],[11,"sub","","",84,[[["instant"]],["duration"]]],[11,"sub","","",84,[[["duration"]],["instant"]]],[11,"add","","",84,[[["duration"]],["instant"]]],[11,"add_assign","","",84,[[["self"],["duration"]]]],[11,"sub_assign","","",84,[[["self"],["duration"]]]],[11,"hash","tokio::net::unix","",37,[[["self"],["__h"]]]],[11,"hash","tokio::time","",84,[[["self"],["__h"]]]],[11,"try_from","tokio::net","Consumes stream, returning the tokio I/O object.",27,[[["tcplistener"]],["result"]]],[11,"try_from","","Consumes stream, returning the tokio I/O object.",32,[[["tcpstream"]],["result"]]],[11,"try_from","","Consumes stream, returning the tokio I/O object.",34,[[["udpsocket"]],["result"]]],[11,"try_from","","Consumes stream, returning the tokio I/O object.",38,[[["unixdatagram"]],["result"]]],[11,"try_from","","Consumes stream, returning the tokio I/O object.",40,[[["unixlistener"]],["result"]]],[11,"try_from","","Consumes stream, returning the tokio I/O object.",41,[[["unixstream"]],["result"]]],[11,"ino","tokio::fs","",6,[[["self"]],["u64"]]],[11,"as_raw_fd","","",1,[[["self"]],["rawfd"]]],[11,"as_raw_fd","tokio::io","",89,[[["self"]],["rawfd"]]],[11,"as_raw_fd","","",90,[[["self"]],["rawfd"]]],[11,"as_raw_fd","","",91,[[["self"]],["rawfd"]]],[11,"as_raw_fd","tokio::net","",27,[[["self"]],["rawfd"]]],[11,"as_raw_fd","","",32,[[["self"]],["rawfd"]]],[11,"as_raw_fd","","",34,[[["self"]],["rawfd"]]],[11,"as_raw_fd","","",38,[[["self"]],["rawfd"]]],[11,"as_raw_fd","","",40,[[["self"]],["rawfd"]]],[11,"as_raw_fd","","",41,[[["self"]],["rawfd"]]],[11,"as_raw_fd","tokio::process","",101,[[["self"]],["rawfd"]]],[11,"as_raw_fd","","",102,[[["self"]],["rawfd"]]],[11,"as_raw_fd","","",103,[[["self"]],["rawfd"]]],[11,"poll","tokio::io","",92,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",93,[[["pin"],["self"],["context"]],[["poll",["result"]],["result",["u64"]]]]],[11,"poll","tokio::process","",42,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","tokio::task","",106,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","tokio::sync::oneshot","",71,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","tokio::task","",78,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","tokio::time","",82,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll","","",86,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll_next","tokio::fs","",5,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"poll_next","tokio::io","",15,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"poll_next","","",16,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"poll_next","tokio::net","",27,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"poll_next","tokio::net::tcp","",28,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"poll_next","tokio::net::unix","",39,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"poll_next","tokio::net","",40,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"poll_next","tokio::signal::unix","",48,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"poll_next","tokio::stream","",107,[[["pin"],["self"],["context"]],[["option"],["poll",["option"]]]]],[11,"size_hint","","",107,[[["self"]]]],[11,"poll_next","","",108,[[["pin"],["self"],["context"]],[["option"],["poll",["option"]]]]],[11,"size_hint","","",108,[[["self"]]]],[11,"poll_next","","",109,[[["pin"],["self"],["context"]],[["option"],["poll",["option"]]]]],[11,"size_hint","","",109,[[["self"]]]],[11,"poll_next","","",110,[[["pin"],["self"],["context"]],[["option"],["poll",["option"]]]]],[11,"size_hint","","",110,[[["self"]]]],[11,"poll_next","","",50,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"size_hint","","",50,[[["self"]]]],[11,"poll_next","tokio::sync::mpsc","",59,[[["pin"],["self"],["context"]],[["option"],["poll",["option"]]]]],[11,"poll_next","","",61,[[["pin"],["self"],["context"]],[["option"],["poll",["option"]]]]],[11,"poll_next","tokio::sync::watch","",76,[[["pin"],["self"],["context"]],[["option"],["poll",["option"]]]]],[11,"poll_next","tokio::time::delay_queue","",80,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"poll_next","tokio::time","",85,[[["pin"],["self"],["context"]],[["poll",["option"]],["option",["instant"]]]]],[11,"poll_next","","",87,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"new","tokio::io","Creates a new I/O error from a known kind of error as well…",88,[[["e"],["errorkind"]],["error"]]],[11,"last_os_error","","Returns an error representing the last OS error which…",88,[[],["error"]]],[11,"from_raw_os_error","","Creates a new instance of an `Error` from a particular OS…",88,[[["i32"]],["error"]]],[11,"raw_os_error","","Returns the OS error that this error represents (if any).",88,[[["self"]],[["option",["i32"]],["i32"]]]],[11,"get_ref","","Returns a reference to the inner error wrapped by this…",88,[[["self"]],[["option",["error"]],["error"]]]],[11,"get_mut","","Returns a mutable reference to the inner error wrapped by…",88,[[["self"]],[["error"],["option",["error"]]]]],[11,"into_inner","","Consumes the `Error`, returning its inner error (if any).",88,[[],[["box",["error"]],["option",["box"]]]]],[11,"kind","","Returns the corresponding `ErrorKind` for this error.",88,[[["self"]],["errorkind"]]],[11,"prepare_uninitialized_buffer","","Prepares an uninitialized buffer to be safe to pass to…",19,[[["self"]],["bool"]]],[11,"poll_read_buf","","Pulls some bytes from this source into the specified…",19,[[["b"],["context"],["pin"],["self"]],[["result",["usize"]],["poll",["result"]]]]],[11,"poll_write_buf","","Writes a `Buf` into this value, returning how many bytes…",21,[[["b"],["context"],["pin"],["self"]],[["poll",["result"]],["result",["usize","error"]]]]],[11,"read_until","","Reads all bytes into `buf` until the delimiter `byte` or…",22,[[["self"],["vec"],["u8"]],["readuntil"]]],[11,"read_line","","Reads all bytes until a newline (the 0xA byte) is reached,…",22,[[["self"],["string"]],["readline"]]],[11,"split","","Returns a stream of the contents of this reader split on…",22,[[["u8"]],["split"]]],[11,"lines","","Returns a stream over the lines of this reader. This…",22,[[],["lines"]]],[11,"chain","","Creates a new `AsyncRead` instance that chains this stream…",23,[[["r"]],["chain"]]],[11,"read","","Pulls some bytes from this source into the specified…",23,[[["self"]],["read"]]],[11,"read_buf","","Pulls some bytes from this source into the specified…",23,[[["self"],["b"]],["readbuf"]]],[11,"read_exact","","Reads the exact number of bytes required to fill `buf`.",23,[[["self"]],["readexact"]]],[11,"read_u8","","Reads an unsigned 8 bit integer from the underlying reader.",23,[[["self"]],[["self"],["readu8"]]]],[11,"read_i8","","Reads a signed 8 bit integer from the underlying reader.",23,[[["self"]],[["readi8"],["self"]]]],[11,"read_u16","","Reads an unsigned 16-bit integer in big-endian order from…",23,[[["self"]],[["readu16"],["self"]]]],[11,"read_i16","","Reads a signed 16-bit integer in big-endian order from the…",23,[[["self"]],[["readi16"],["self"]]]],[11,"read_u32","","Reads an unsigned 32-bit integer in big-endian order from…",23,[[["self"]],[["self"],["readu32"]]]],[11,"read_i32","","Reads a signed 32-bit integer in big-endian order from the…",23,[[["self"]],[["readi32"],["self"]]]],[11,"read_u64","","Reads an unsigned 64-bit integer in big-endian order from…",23,[[["self"]],[["self"],["readu64"]]]],[11,"read_i64","","Reads an signed 64-bit integer in big-endian order from…",23,[[["self"]],[["self"],["readi64"]]]],[11,"read_u128","","Reads an unsigned 128-bit integer in big-endian order from…",23,[[["self"]],[["self"],["readu128"]]]],[11,"read_i128","","Reads an signed 128-bit integer in big-endian order from…",23,[[["self"]],[["self"],["readi128"]]]],[11,"read_to_end","","Reads all bytes until EOF in this source, placing them…",23,[[["self"],["vec"]],["readtoend"]]],[11,"read_to_string","","Reads all bytes until EOF in this source, appending them…",23,[[["self"],["string"]],["readtostring"]]],[11,"take","","Creates an adaptor which reads at most `limit` bytes from…",23,[[["u64"]],["take"]]],[11,"seek","","Creates a future which will seek an IO object, and then…",24,[[["self"],["seekfrom"]],["seek"]]],[11,"write","","Writes a buffer into this writer, returning how many bytes…",25,[[["self"]],["write"]]],[11,"write_buf","","Writes a buffer into this writer, advancing the buffer's…",25,[[["self"],["b"]],["writebuf"]]],[11,"write_all","","Attempts to write an entire buffer into this writer.",25,[[["self"]],["writeall"]]],[11,"write_u8","","Writes an unsigned 8-bit integer to the underlying writer.",25,[[["self"],["u8"]],[["self"],["writeu8"]]]],[11,"write_i8","","Writes an unsigned 8-bit integer to the underlying writer.",25,[[["self"],["i8"]],[["writei8"],["self"]]]],[11,"write_u16","","Writes an unsigned 16-bit integer in big-endian order to…",25,[[["u16"],["self"]],[["self"],["writeu16"]]]],[11,"write_i16","","Writes a signed 16-bit integer in big-endian order to the…",25,[[["self"],["i16"]],[["writei16"],["self"]]]],[11,"write_u32","","Writes an unsigned 32-bit integer in big-endian order to…",25,[[["self"],["u32"]],[["self"],["writeu32"]]]],[11,"write_i32","","Writes a signed 32-bit integer in big-endian order to the…",25,[[["self"],["i32"]],[["self"],["writei32"]]]],[11,"write_u64","","Writes an unsigned 64-bit integer in big-endian order to…",25,[[["self"],["u64"]],[["self"],["writeu64"]]]],[11,"write_i64","","Writes an signed 64-bit integer in big-endian order to the…",25,[[["i64"],["self"]],[["self"],["writei64"]]]],[11,"write_u128","","Writes an unsigned 128-bit integer in big-endian order to…",25,[[["self"],["u128"]],[["writeu128"],["self"]]]],[11,"write_i128","","Writes an signed 128-bit integer in big-endian order to…",25,[[["self"],["i128"]],[["self"],["writei128"]]]],[11,"flush","","Flushes this output stream, ensuring that all…",25,[[["self"]],["flush"]]],[11,"shutdown","","Shuts down the output stream, ensuring that the value can…",25,[[["self"]],["shutdown"]]],[11,"is_cancelled","tokio::task","Returns true if the error was caused by the task being…",105,[[["self"]],["bool"]]],[11,"is_panic","","Returns true if the error was caused by the task panicking",105,[[["self"]],["bool"]]],[11,"into_panic","","Consumes the join error, returning the object with which…",105,[[],[["box",["any"]],["any"]]]],[11,"try_into_panic","","Consumes the join error, returning the object with which…",105,[[],[["box",["any"]],["result",["box","joinerror"]],["joinerror"]]]],[18,"SECOND","tokio::time","The duration of one second.",121,null],[18,"MILLISECOND","","The duration of one millisecond.",121,null],[18,"MICROSECOND","","The duration of one microsecond.",121,null],[18,"NANOSECOND","","The duration of one nanosecond.",121,null],[11,"new","","Creates a new `Duration` from the specified number of…",121,[[["u32"],["u64"]],["duration"]]],[11,"from_secs","","Creates a new `Duration` from the specified number of…",121,[[["u64"]],["duration"]]],[11,"from_millis","","Creates a new `Duration` from the specified number of…",121,[[["u64"]],["duration"]]],[11,"from_micros","","Creates a new `Duration` from the specified number of…",121,[[["u64"]],["duration"]]],[11,"from_nanos","","Creates a new `Duration` from the specified number of…",121,[[["u64"]],["duration"]]],[11,"as_secs","","Returns the number of whole seconds contained by this…",121,[[["self"]],["u64"]]],[11,"subsec_millis","","Returns the fractional part of this `Duration`, in whole…",121,[[["self"]],["u32"]]],[11,"subsec_micros","","Returns the fractional part of this `Duration`, in whole…",121,[[["self"]],["u32"]]],[11,"subsec_nanos","","Returns the fractional part of this `Duration`, in…",121,[[["self"]],["u32"]]],[11,"as_millis","","Returns the total number of whole milliseconds contained…",121,[[["self"]],["u128"]]],[11,"as_micros","","Returns the total number of whole microseconds contained…",121,[[["self"]],["u128"]]],[11,"as_nanos","","Returns the total number of nanoseconds contained by this…",121,[[["self"]],["u128"]]],[11,"checked_add","","Checked `Duration` addition. Computes `self + other`,…",121,[[["duration"]],[["duration"],["option",["duration"]]]]],[11,"checked_sub","","Checked `Duration` subtraction. Computes `self - other`,…",121,[[["duration"]],[["duration"],["option",["duration"]]]]],[11,"checked_mul","","Checked `Duration` multiplication. Computes `self *…",121,[[["u32"]],[["duration"],["option",["duration"]]]]],[11,"checked_div","","Checked `Duration` division. Computes `self / other`,…",121,[[["u32"]],[["duration"],["option",["duration"]]]]],[11,"as_secs_f64","","Returns the number of seconds contained by this `Duration`…",121,[[["self"]],["f64"]]],[11,"as_secs_f32","","Returns the number of seconds contained by this `Duration`…",121,[[["self"]],["f32"]]],[11,"from_secs_f64","","Creates a new `Duration` from the specified number of…",121,[[["f64"]],["duration"]]],[11,"from_secs_f32","","Creates a new `Duration` from the specified number of…",121,[[["f32"]],["duration"]]],[11,"mul_f64","","Multiplies `Duration` by `f64`.",121,[[["f64"]],["duration"]]],[11,"mul_f32","","Multiplies `Duration` by `f32`.",121,[[["f32"]],["duration"]]],[11,"div_f64","","Divide `Duration` by `f64`.",121,[[["f64"]],["duration"]]],[11,"div_f32","","Divide `Duration` by `f32`.",121,[[["f32"]],["duration"]]],[11,"div_duration_f64","","Divide `Duration` by `Duration` and return `f64`.",121,[[["duration"]],["f64"]]],[11,"div_duration_f32","","Divide `Duration` by `Duration` and return `f32`.",121,[[["duration"]],["f32"]]]],"p":[[3,"DirBuilder"],[3,"File"],[3,"OpenOptions"],[8,"OpenOptionsExt"],[8,"DirBuilderExt"],[3,"ReadDir"],[3,"DirEntry"],[4,"ErrorKind"],[3,"PollEvented"],[3,"Registration"],[3,"ReadHalf"],[3,"WriteHalf"],[3,"BufReader"],[3,"BufStream"],[3,"BufWriter"],[3,"Lines"],[3,"Split"],[3,"Take"],[8,"AsyncBufRead"],[8,"AsyncRead"],[8,"AsyncSeek"],[8,"AsyncWrite"],[8,"AsyncBufReadExt"],[8,"AsyncReadExt"],[8,"AsyncSeekExt"],[8,"AsyncWriteExt"],[3,"ReuniteError"],[3,"TcpListener"],[3,"Incoming"],[3,"ReadHalf"],[3,"OwnedReadHalf"],[3,"OwnedWriteHalf"],[3,"TcpStream"],[3,"ReuniteError"],[3,"UdpSocket"],[3,"RecvHalf"],[3,"SendHalf"],[3,"UCred"],[3,"UnixDatagram"],[3,"Incoming"],[3,"UnixListener"],[3,"UnixStream"],[3,"Child"],[3,"Command"],[3,"Builder"],[3,"Handle"],[3,"Runtime"],[3,"SignalKind"],[3,"Signal"],[8,"Stream"],[3,"StreamMap"],[8,"StreamExt"],[3,"Barrier"],[3,"BarrierWaitResult"],[3,"SendError"],[4,"RecvError"],[4,"TryRecvError"],[3,"Sender"],[3,"Receiver"],[3,"Receiver"],[3,"Sender"],[3,"UnboundedReceiver"],[3,"UnboundedSender"],[3,"SendError"],[4,"TrySendError"],[4,"TryRecvError"],[4,"SendTimeoutError"],[3,"Mutex"],[3,"Notify"],[4,"TryRecvError"],[3,"Sender"],[3,"Receiver"],[3,"Semaphore"],[3,"SemaphorePermit"],[3,"OwnedSemaphorePermit"],[3,"RwLock"],[3,"Receiver"],[3,"Sender"],[3,"LocalSet"],[3,"LocalKey"],[3,"DelayQueue"],[3,"Expired"],[3,"Delay"],[3,"Error"],[3,"Instant"],[3,"Interval"],[3,"Timeout"],[3,"Throttle"],[3,"Error"],[3,"Stderr"],[3,"Stdin"],[3,"Stdout"],[3,"Seek"],[3,"Copy"],[3,"Empty"],[3,"Repeat"],[3,"Sink"],[3,"StreamReader"],[3,"WriteHalf"],[3,"ReadHalf"],[3,"WriteHalf"],[3,"ChildStdin"],[3,"ChildStdout"],[3,"ChildStderr"],[3,"TryCurrentError"],[3,"JoinError"],[3,"JoinHandle"],[3,"Empty"],[3,"Iter"],[3,"Once"],[3,"Pending"],[3,"MutexGuard"],[3,"TryLockError"],[3,"OwnedMutexGuard"],[3,"RwLockReadGuard"],[3,"RwLockWriteGuard"],[3,"RecvError"],[3,"ClosedError"],[3,"RecvError"],[3,"Ref"],[3,"SendError"],[3,"Duration"],[3,"Elapsed"],[3,"Key"]]};
searchIndex["tokio_macros"] = {"doc":"Macros for use with Tokio","i":[[23,"main_threaded","tokio_macros","Marks async function to be executed by selected runtime.",null,null],[23,"main","","Marks async function to be executed by selected runtime.",null,null],[23,"main_basic","","Marks async function to be executed by selected runtime.",null,null],[23,"test_threaded","","Marks async function to be executed by runtime, suitable…",null,null],[23,"test","","Marks async function to be executed by runtime, suitable…",null,null],[23,"test_basic","","Marks async function to be executed by runtime, suitable…",null,null]],"p":[]};
searchIndex["tokio_test"] = {"doc":"Tokio and Futures based testing utilites","i":[[5,"block_on","tokio_test","Runs the provided future, blocking the current thread…",null,[[["future"]]]],[0,"io","","A mock type implementing [`AsyncRead`] and [`AsyncWrite`].",null,null],[3,"Mock","tokio_test::io","An I/O object that follows a predefined script.",null,null],[3,"Handle","","A handle to send additional actions to the related `Mock`.",null,null],[3,"Builder","","Builds `Mock` instances.",null,null],[11,"new","","Return a new, empty `Builder.",0,[[],["self"]]],[11,"read","","Sequence a `read` operation.",0,[[["self"]],["self"]]],[11,"read_error","","Sequence a `read` operation that produces an error.",0,[[["self"],["error"]],["self"]]],[11,"write","","Sequence a `write` operation.",0,[[["self"]],["self"]]],[11,"write_error","","Sequence a `write` operation that produces an error.",0,[[["self"],["error"]],["self"]]],[11,"wait","","Sequence a wait.",0,[[["self"],["duration"]],["self"]]],[11,"build","","Build a `Mock` value according to the defined script.",0,[[["self"]],["mock"]]],[11,"build_with_handle","","Build a `Mock` value paired with a handle",0,[[["self"]]]],[11,"read","","Sequence a `read` operation.",1,[[["self"]],["self"]]],[11,"read_error","","Sequence a `read` operation error.",1,[[["self"],["error"]],["self"]]],[11,"write","","Sequence a `write` operation.",1,[[["self"]],["self"]]],[11,"write_error","","Sequence a `write` operation error.",1,[[["self"],["error"]],["self"]]],[0,"task","tokio_test","Futures task based helpers",null,null],[3,"Spawn","tokio_test::task","Future spawned on a mock task",null,null],[5,"spawn","","TOOD: dox",null,[[["t"]],["spawn"]]],[11,"into_inner","","Consumes `self` returning the inner value",2,[[],["t"]]],[11,"is_woken","","Returns `true` if the inner future has received a wake…",2,[[["self"]],["bool"]]],[11,"waker_ref_count","","Returns the number of references to the task waker",2,[[["self"]],["usize"]]],[11,"enter","","Enter the task context",2,[[["self"],["f"]],["r"]]],[11,"poll","","Polls a future",2,[[["self"]],["poll"]]],[11,"poll_next","","Polls a stream",2,[[["self"]],[["option"],["poll",["option"]]]]],[14,"assert_ready","tokio_test","Asserts a `Poll` is ready, returning the value.",null,null],[14,"assert_ready_ok","","Asserts a `Poll<Result<...>>` is ready and `Ok`, returning…",null,null],[14,"assert_ready_err","","Asserts a `Poll<Result<...>>` is ready and `Err`,…",null,null],[14,"assert_pending","","Asserts a `Poll` is pending.",null,null],[14,"assert_ready_eq","","Asserts if a poll is ready and check for equality on the…",null,null],[14,"assert_ok","","Asserts that the expression evaluates to `Ok` and returns…",null,null],[14,"assert_err","","Asserts that the expression evaluates to `Err` and returns…",null,null],[11,"from","tokio_test::io","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"to_owned","","",0,[[["self"]],["t"]]],[11,"clone_into","","",0,[[["self"],["t"]]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","tokio_test::task","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"try_poll","","",2,[[["pin"],["f"],["context"]],["poll"]]],[11,"try_poll_next","","",2,[[["pin"],["s"],["context"]],[["poll",["option"]],["option",["result"]]]]],[11,"load","","",2,[[["self"]]]],[11,"load","","",2,[[["self"]],["dynguard"]]],[11,"clone","tokio_test::io","",0,[[["self"]],["builder"]]],[11,"default","","",0,[[],["builder"]]],[11,"deref","tokio_test::task","",2,[[["self"]],["t"]]],[11,"deref_mut","","",2,[[["self"]],["t"]]],[11,"fmt","tokio_test::io","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio_test::task","",2,[[["formatter"],["self"]],["result"]]],[11,"poll","","",2,[[["pin"],["self"],["context"]],["poll"]]],[11,"poll_read","tokio_test::io","",3,[[["context"],["pin"],["self"]],[["result",["usize"]],["poll",["result"]]]]],[11,"poll_write","","",3,[[["context"],["pin"],["self"]],[["result",["usize"]],["poll",["result"]]]]],[11,"poll_write_buf","","",3,[[["b"],["context"],["pin"],["self"]],[["result",["usize"]],["poll",["result"]]]]],[11,"poll_flush","","",3,[[["pin"],["self"],["context"]],[["result"],["poll",["result"]]]]],[11,"poll_shutdown","","",3,[[["pin"],["self"],["context"]],[["result"],["poll",["result"]]]]],[11,"poll_next","tokio_test::task","",2,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]]],"p":[[3,"Builder"],[3,"Handle"],[3,"Spawn"],[3,"Mock"]]};
searchIndex["tokio_util"] = {"doc":"Utilities for working with Tokio.","i":[[0,"codec","tokio_util","Adaptors from AsyncRead/AsyncWrite to Stream/Sink",null,null],[3,"BytesCodec","tokio_util::codec","A simple [`Decoder`] and [`Encoder`] implementation that…",null,null],[3,"Framed","","A unified [`Stream`] and [`Sink`] interface to an…",null,null],[3,"FramedParts","","`FramedParts` contains an export of the data of a Framed…",null,null],[12,"io","","The inner transport used to read bytes to and write bytes to",0,null],[12,"codec","","The codec",0,null],[12,"read_buf","","The buffer with read but unprocessed data.",0,null],[12,"write_buf","","A buffer with unprocessed data which are not written yet.",0,null],[3,"FramedRead","","A [`Stream`] of messages decoded from an [`AsyncRead`].",null,null],[3,"FramedWrite","","A [`Sink`] of frames encoded to an `AsyncWrite`.",null,null],[3,"LinesCodec","","A simple [`Decoder`] and [`Encoder`] implementation that…",null,null],[4,"LinesCodecError","","An error occured while encoding or decoding a line.",null,null],[13,"MaxLineLengthExceeded","","The maximum line length was exceeded.",1,null],[13,"Io","","An IO error occured.",1,null],[11,"new","","Creates a new `BytesCodec` for shipping around raw bytes.",2,[[],["bytescodec"]]],[11,"new","","Provides a [`Stream`] and [`Sink`] interface for reading…",3,[[["u"],["t"]],["framed"]]],[11,"with_capacity","","Provides a [`Stream`] and [`Sink`] interface for reading…",3,[[["u"],["t"],["usize"]],["framed"]]],[11,"from_parts","","Provides a [`Stream`] and [`Sink`] interface for reading…",3,[[["framedparts"]],["framed"]]],[11,"get_ref","","Returns a reference to the underlying I/O stream wrapped…",3,[[["self"]],["t"]]],[11,"get_mut","","Returns a mutable reference to the underlying I/O stream…",3,[[["self"]],["t"]]],[11,"codec","","Returns a reference to the underlying codec wrapped by…",3,[[["self"]],["u"]]],[11,"codec_mut","","Returns a mutable reference to the underlying codec…",3,[[["self"]],["u"]]],[11,"read_buffer","","Returns a reference to the read buffer.",3,[[["self"]],["bytesmut"]]],[11,"read_buffer_mut","","Returns a mutable reference to the read buffer.",3,[[["self"]],["bytesmut"]]],[11,"into_inner","","Consumes the `Framed`, returning its underlying I/O stream.",3,[[],["t"]]],[11,"into_parts","","Consumes the `Framed`, returning its underlying I/O…",3,[[],["framedparts"]]],[11,"new","","Create a new, default, `FramedParts`",0,[[["u"],["t"]],["framedparts"]]],[11,"new","","Creates a new `FramedRead` with the given `decoder`.",4,[[["d"],["t"]],["framedread"]]],[11,"with_capacity","","Creates a new `FramedRead` with the given `decoder` and a…",4,[[["d"],["t"],["usize"]],["framedread"]]],[11,"get_ref","","Returns a reference to the underlying I/O stream wrapped…",4,[[["self"]],["t"]]],[11,"get_mut","","Returns a mutable reference to the underlying I/O stream…",4,[[["self"]],["t"]]],[11,"into_inner","","Consumes the `FramedRead`, returning its underlying I/O…",4,[[],["t"]]],[11,"decoder","","Returns a reference to the underlying decoder.",4,[[["self"]],["d"]]],[11,"decoder_mut","","Returns a mutable reference to the underlying decoder.",4,[[["self"]],["d"]]],[11,"read_buffer","","Returns a reference to the read buffer.",4,[[["self"]],["bytesmut"]]],[11,"new","","Creates a new `FramedWrite` with the given `encoder`.",5,[[["t"],["e"]],["framedwrite"]]],[11,"get_ref","","Returns a reference to the underlying I/O stream wrapped…",5,[[["self"]],["t"]]],[11,"get_mut","","Returns a mutable reference to the underlying I/O stream…",5,[[["self"]],["t"]]],[11,"into_inner","","Consumes the `FramedWrite`, returning its underlying I/O…",5,[[],["t"]]],[11,"encoder","","Returns a reference to the underlying encoder.",5,[[["self"]],["e"]]],[11,"encoder_mut","","Returns a mutable reference to the underlying encoder.",5,[[["self"]],["e"]]],[0,"length_delimited","","Frame a stream of bytes based on a length prefix",null,null],[3,"Builder","tokio_util::codec::length_delimited","Configure length delimited `LengthDelimitedCodec`s.",null,null],[3,"LengthDelimitedCodecError","","An error when the number of bytes read is more than max…",null,null],[3,"LengthDelimitedCodec","","A codec for frames delimited by a frame head specifying…",null,null],[11,"new","","Creates a new `LengthDelimitedCodec` with the default…",6,[[],["self"]]],[11,"builder","","Creates a new length delimited codec builder with default…",6,[[],["builder"]]],[11,"max_frame_length","","Returns the current max frame setting",6,[[["self"]],["usize"]]],[11,"set_max_frame_length","","Updates the max frame setting.",6,[[["self"],["usize"]]]],[11,"new","","Creates a new length delimited codec builder with default…",7,[[],["builder"]]],[11,"big_endian","","Read the length field as a big endian integer",7,[[["self"]],["self"]]],[11,"little_endian","","Read the length field as a little endian integer",7,[[["self"]],["self"]]],[11,"native_endian","","Read the length field as a native endian integer",7,[[["self"]],["self"]]],[11,"max_frame_length","","Sets the max frame length",7,[[["self"],["usize"]],["self"]]],[11,"length_field_length","","Sets the number of bytes used to represent the length field",7,[[["self"],["usize"]],["self"]]],[11,"length_field_offset","","Sets the number of bytes in the header before the length…",7,[[["self"],["usize"]],["self"]]],[11,"length_adjustment","","Delta between the payload length specified in the header…",7,[[["isize"],["self"]],["self"]]],[11,"num_skip","","Sets the number of bytes to skip before reading the payload",7,[[["self"],["usize"]],["self"]]],[11,"new_codec","","Create a configured length delimited `LengthDelimitedCodec`",7,[[["self"]],["lengthdelimitedcodec"]]],[11,"new_read","","Create a configured length delimited `FramedRead`",7,[[["self"],["t"]],[["lengthdelimitedcodec"],["framedread",["lengthdelimitedcodec"]]]]],[11,"new_write","","Create a configured length delimited `FramedWrite`",7,[[["self"],["t"]],[["framedwrite",["lengthdelimitedcodec"]],["lengthdelimitedcodec"]]]],[11,"new_framed","","Create a configured length delimited `Framed`",7,[[["self"],["t"]],[["framed",["lengthdelimitedcodec"]],["lengthdelimitedcodec"]]]],[11,"new","tokio_util::codec","Returns a `LinesCodec` for splitting up data into lines.",8,[[],["linescodec"]]],[11,"new_with_max_length","","Returns a `LinesCodec` with a maximum line length limit.",8,[[["usize"]],["self"]]],[11,"max_length","","Returns the maximum line length when decoding.",8,[[["self"]],["usize"]]],[8,"Decoder","","Decoding of frames via buffers.",null,null],[16,"Item","","The type of decoded frames.",9,null],[16,"Error","","The type of unrecoverable frame decoding errors.",9,null],[10,"decode","","Attempts to decode a frame from the provided buffer of…",9,[[["self"],["bytesmut"]],[["result",["option"]],["option"]]]],[11,"decode_eof","","A default method available to be called when there are no…",9,[[["self"],["bytesmut"]],[["result",["option"]],["option"]]]],[11,"framed","","Provides a [`Stream`] and [`Sink`] interface for reading…",9,[[["asyncwrite"],["sized"],["asyncread"]],[["asyncread"],["asyncwrite"],["framed"],["sized"]]]],[8,"Encoder","","Trait of helper objects to write out messages as bytes,…",null,null],[16,"Error","","The type of encoding errors.",10,null],[10,"encode","","Encodes a frame into the buffer provided.",10,[[["self"],["item"],["bytesmut"]],["result"]]],[0,"udp","tokio_util","UDP framing",null,null],[3,"UdpFramed","tokio_util::udp","A unified `Stream` and `Sink` interface to an underlying…",null,null],[11,"new","","Create a new `UdpFramed` backed by the given socket and…",11,[[["c"],["udpsocket"]],["udpframed"]]],[11,"get_ref","","Returns a reference to the underlying I/O stream wrapped…",11,[[["self"]],["udpsocket"]]],[11,"get_mut","","Returns a mutable reference to the underlying I/O stream…",11,[[["self"]],["udpsocket"]]],[11,"into_inner","","Consumes the `Framed`, returning its underlying I/O stream.",11,[[],["udpsocket"]]],[0,"compat","tokio_util","Compatibility between the `tokio::io` and `futures-io`…",null,null],[3,"Compat","tokio_util::compat","A compatibility layer that allows conversion between the…",null,null],[8,"FuturesAsyncReadCompatExt","","Extension trait that allows converting a type implementing…",null,null],[11,"compat","","Wraps `self` with a compatibility layer that implements…",12,[[],["compat"]]],[8,"FuturesAsyncWriteCompatExt","","Extension trait that allows converting a type implementing…",null,null],[11,"compat_write","","Wraps `self` with a compatibility layer that implements…",13,[[],["compat"]]],[8,"Tokio02AsyncReadCompatExt","","Extension trait that allows converting a type implementing…",null,null],[11,"compat","","Wraps `self` with a compatibility layer that implements…",14,[[],["compat"]]],[8,"Tokio02AsyncWriteCompatExt","","Extension trait that allows converting a type implementing…",null,null],[11,"compat_write","","Wraps `self` with a compatibility layer that implements…",15,[[],["compat"]]],[11,"get_ref","","Get a reference to the `Future`, `Stream`, `AsyncRead`, or…",16,[[["self"]],["t"]]],[11,"get_mut","","Get a mutable reference to the `Future`, `Stream`,…",16,[[["self"]],["t"]]],[11,"into_inner","","Returns the wrapped item.",16,[[],["t"]]],[11,"from","tokio_util::codec","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"try_poll_next","","",3,[[["pin"],["s"],["context"]],[["poll",["option"]],["option",["result"]]]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"try_poll_next","","",4,[[["pin"],["s"],["context"]],[["poll",["option"]],["option",["result"]]]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"try_poll_next","","",5,[[["pin"],["s"],["context"]],[["poll",["option"]],["option",["result"]]]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","tokio_util::codec::length_delimited","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,[[["self"],["t"]]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"into","","",17,[[],["u"]]],[11,"to_string","","",17,[[["self"]],["string"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"try_into","","",17,[[],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"type_id","","",17,[[["self"]],["typeid"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"from","tokio_util::udp","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"try_poll_next","","",11,[[["pin"],["s"],["context"]],[["poll",["option"]],["option",["result"]]]]],[11,"from","tokio_util::compat","",16,[[["t"]],["t"]]],[11,"into","","",16,[[],["u"]]],[11,"to_owned","","",16,[[["self"]],["t"]]],[11,"clone_into","","",16,[[["self"],["t"]]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"try_into","","",16,[[],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"type_id","","",16,[[["self"]],["typeid"]]],[11,"decode","tokio_util::codec","",2,[[["self"],["bytesmut"]],[["error"],["option",["bytesmut"]],["result",["option","error"]]]]],[11,"decode","tokio_util::codec::length_delimited","",6,[[["self"],["bytesmut"]],[["result",["option"]],["option",["bytesmut"]]]]],[11,"decode","tokio_util::codec","",8,[[["self"],["bytesmut"]],[["linescodecerror"],["result",["option","linescodecerror"]],["option",["string"]]]]],[11,"decode_eof","","",8,[[["self"],["bytesmut"]],[["linescodecerror"],["result",["option","linescodecerror"]],["option",["string"]]]]],[11,"encode","","",2,[[["self"],["bytes"],["bytesmut"]],[["result",["error"]],["error"]]]],[11,"encode","tokio_util::codec::length_delimited","",6,[[["self"],["bytes"],["bytesmut"]],[["result",["error"]],["error"]]]],[11,"encode","tokio_util::codec","",8,[[["self"],["t"],["bytesmut"]],[["result",["linescodecerror"]],["linescodecerror"]]]],[11,"from","","",1,[[["error"]],["linescodecerror"]]],[11,"clone","","",2,[[["self"]],["bytescodec"]]],[11,"clone","tokio_util::codec::length_delimited","",7,[[["self"]],["builder"]]],[11,"clone","tokio_util::codec","",8,[[["self"]],["linescodec"]]],[11,"clone","tokio_util::compat","",16,[[["self"]],["compat"]]],[11,"default","tokio_util::codec","",2,[[],["bytescodec"]]],[11,"default","tokio_util::codec::length_delimited","",6,[[],["self"]]],[11,"default","","",7,[[],["self"]]],[11,"default","tokio_util::codec","",8,[[],["self"]]],[11,"cmp","","",2,[[["bytescodec"],["self"]],["ordering"]]],[11,"cmp","","",8,[[["linescodec"],["self"]],["ordering"]]],[11,"eq","","",2,[[["bytescodec"],["self"]],["bool"]]],[11,"ne","","",2,[[["bytescodec"],["self"]],["bool"]]],[11,"eq","","",8,[[["linescodec"],["self"]],["bool"]]],[11,"ne","","",8,[[["linescodec"],["self"]],["bool"]]],[11,"partial_cmp","","",2,[[["bytescodec"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",2,[[["bytescodec"],["self"]],["bool"]]],[11,"le","","",2,[[["bytescodec"],["self"]],["bool"]]],[11,"gt","","",2,[[["bytescodec"],["self"]],["bool"]]],[11,"ge","","",2,[[["bytescodec"],["self"]],["bool"]]],[11,"partial_cmp","","",8,[[["linescodec"],["self"]],[["option",["ordering"]],["ordering"]]]],[11,"lt","","",8,[[["linescodec"],["self"]],["bool"]]],[11,"le","","",8,[[["linescodec"],["self"]],["bool"]]],[11,"gt","","",8,[[["linescodec"],["self"]],["bool"]]],[11,"ge","","",8,[[["linescodec"],["self"]],["bool"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio_util::codec::length_delimited","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio_util::codec","",8,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio_util::udp","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio_util::compat","",16,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio_util::codec::length_delimited","",17,[[["formatter"],["self"]],["result"]]],[11,"fmt","tokio_util::codec","",1,[[["formatter"],["self"]],["result"]]],[11,"hash","","",2,[[["self"],["__h"]]]],[11,"hash","","",8,[[["self"],["__h"]]]],[11,"poll_read","tokio_util::compat","",16,[[["context"],["pin"],["self"]],[["result",["usize"]],["poll",["result"]]]]],[11,"poll_write","","",16,[[["context"],["pin"],["self"]],[["result",["usize"]],["poll",["result"]]]]],[11,"poll_flush","","",16,[[["pin"],["self"],["context"]],[["result"],["poll",["result"]]]]],[11,"poll_shutdown","","",16,[[["pin"],["self"],["context"]],[["result"],["poll",["result"]]]]],[11,"poll_fill_buf","","",16,[[["self"],["pin"],["context"]],[["result"],["poll",["result"]]]]],[11,"consume","","",16,[[["pin"],["self"],["usize"]]]],[11,"poll_next","tokio_util::codec","",3,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"poll_next","","",4,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"poll_next","","",5,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"poll_next","tokio_util::udp","",11,[[["pin"],["self"],["context"]],[["poll",["option"]],["option"]]]],[11,"poll_ready","tokio_util::codec","",3,[[["pin"],["self"],["context"]],[["result"],["poll",["result"]]]]],[11,"start_send","","",3,[[["pin"],["self"],["i"]],["result"]]],[11,"poll_flush","","",3,[[["pin"],["self"],["context"]],[["result"],["poll",["result"]]]]],[11,"poll_close","","",3,[[["pin"],["self"],["context"]],[["result"],["poll",["result"]]]]],[11,"poll_ready","","",4,[[["pin"],["self"],["context"]],[["result"],["poll",["result"]]]]],[11,"start_send","","",4,[[["pin"],["self"],["i"]],["result"]]],[11,"poll_flush","","",4,[[["pin"],["self"],["context"]],[["result"],["poll",["result"]]]]],[11,"poll_close","","",4,[[["pin"],["self"],["context"]],[["result"],["poll",["result"]]]]],[11,"poll_ready","","",5,[[["pin"],["self"],["context"]],[["result"],["poll",["result"]]]]],[11,"start_send","","",5,[[["pin"],["self"],["i"]],["result"]]],[11,"poll_flush","","",5,[[["pin"],["self"],["context"]],[["result"],["poll",["result"]]]]],[11,"poll_close","","",5,[[["pin"],["self"],["context"]],[["result"],["poll",["result"]]]]],[11,"poll_ready","tokio_util::udp","",11,[[["pin"],["self"],["context"]],[["result"],["poll",["result"]]]]],[11,"start_send","","",11,[[["pin"],["self"]],["result"]]],[11,"poll_flush","","",11,[[["pin"],["self"],["context"]],[["result"],["poll",["result"]]]]],[11,"poll_close","","",11,[[["pin"],["self"],["context"]],[["result"],["poll",["result"]]]]],[11,"poll_read","tokio_util::compat","",16,[[["context"],["pin"],["self"]],[["result",["usize"]],["poll",["result"]]]]],[11,"poll_write","","",16,[[["context"],["pin"],["self"]],[["result",["usize"]],["poll",["result"]]]]],[11,"poll_flush","","",16,[[["pin"],["self"],["context"]],[["result"],["poll",["result"]]]]],[11,"poll_close","","",16,[[["pin"],["self"],["context"]],[["result"],["poll",["result"]]]]],[11,"poll_fill_buf","","",16,[[["self"],["pin"],["context"]],[["result"],["poll",["result"]]]]],[11,"consume","","",16,[[["pin"],["self"],["usize"]]]],[11,"decode_eof","tokio_util::codec","A default method available to be called when there are no…",9,[[["self"],["bytesmut"]],[["result",["option"]],["option"]]]],[11,"framed","","Provides a [`Stream`] and [`Sink`] interface for reading…",9,[[["asyncwrite"],["sized"],["asyncread"]],[["asyncread"],["asyncwrite"],["framed"],["sized"]]]]],"p":[[3,"FramedParts"],[4,"LinesCodecError"],[3,"BytesCodec"],[3,"Framed"],[3,"FramedRead"],[3,"FramedWrite"],[3,"LengthDelimitedCodec"],[3,"Builder"],[3,"LinesCodec"],[8,"Decoder"],[8,"Encoder"],[3,"UdpFramed"],[8,"FuturesAsyncReadCompatExt"],[8,"FuturesAsyncWriteCompatExt"],[8,"Tokio02AsyncReadCompatExt"],[8,"Tokio02AsyncWriteCompatExt"],[3,"Compat"],[3,"LengthDelimitedCodecError"]]};
addSearchOptions(searchIndex);initSearch(searchIndex);